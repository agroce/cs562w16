@import stack


pools:
        <stack> 2
        <value> 10

actions:

        <value> := <[0..20]>

        <stack> := stack.Stack()

        <stack>.add(<value>)

        <stack>.add(<value>) -> boole = <stack>.is_empty() -> (boole == True)

        <stack>.add(<value>) -> <stack,1>.remove() -> list1 = <stack,1>.stack_list => (len(list1) == 0)
		
		(not <stack>.is_empty()) -> list = <stack,1>.stack_list ; val = list[len(list)-1] ; popval = <stack,1>.remove() => val == popval

        <stack>.add(<value>) => (<value,1> in <stack,1>.stack_list) and (<stack,1>.size() == (pre<(<stack,1>.size())>+1))

