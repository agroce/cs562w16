@import heapq

logs:
	1 <link>
	1 <heap>
	POST 1 <link>
	POST 1 <heap>

pools:
	<int> 3
	<heap> 5
	<char> 3
	<link> 5

actions:
	<int> := <[1..10]>
	<char> := <["a","b","c","d","e","f","g"]>
	
	<link> := <int>
	<link> := <char>

	<heap> := []
	~<heap>.append(<link>)

	heapq.heappush(<heap>,<int>) => (len(<heap,1>) == pre<(len(<heap,1>))>+1)

	((len(<heap,1>))!= 0) -> heapq.heappop(<heap>) => (len(<heap,1>) == pre<(len(<heap,1>))>-1)

	((len(<heap,1>))!= 0) -> heapq.heapreplace(<heap>,<int>) => (len(<heap,1>) == pre<(len(<heap,1>))>)

	heapq.heappushpop(<heap>,<int>) => (len(<heap,1>) == pre<(len(<heap,1>))>)
	

	<heap> := heapq.nlargest(<int>,<heap>)

	<heap> := heapq.nsmallest(<int>,<heap>)
	
	<heap> := list(heapq.merge(<heap>,<heap>))

