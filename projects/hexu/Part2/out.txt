Random testing using config=Config(verbose=False, failedLogging=None, maxtests=2, greedyStutter=False, seed=None, generalize=False, uncaught=False, speed='FAST', internal=False, normalize=False, replayable=False, essentials=False, quickTests=False, coverfile='coverage.out', ignoreprops=False, total=False, noreassign=False, full=False, multiple=False, stutter=None, running=False, nocover=True, gendepth=None, logging=1, html=None, keep=False, depth=100, timeout=3600, output=None)
[ LOG self.p_int[1] = 6  :  self.p_key[0]] None
[ LOG self.p_int[1] = 6  :  self.p_key[1]] None
[ LOG self.p_int[1] = 6  :  self.p_key[2]] None
[ LOG self.p_int[1] = 6  :  self.p_value[0]] None
[ LOG self.p_int[1] = 6  :  self.p_value[1]] None
[ LOG self.p_int[1] = 6  :  self.p_value[2]] None
[ POST LOG self.p_int[1] = 6  :  self.p_key[0]] None
[ POST LOG self.p_int[1] = 6  :  self.p_key[1]] None
[ POST LOG self.p_int[1] = 6  :  self.p_key[2]] None
[ POST LOG self.p_int[1] = 6  :  self.p_value[0]] None
[ POST LOG self.p_int[1] = 6  :  self.p_value[1]] None
[ POST LOG self.p_int[1] = 6  :  self.p_value[2]] None
[ LOG self.p_int[2] = 10  :  self.p_key[0]] None
[ LOG self.p_int[2] = 10  :  self.p_key[1]] None
[ LOG self.p_int[2] = 10  :  self.p_key[2]] None
[ LOG self.p_int[2] = 10  :  self.p_value[0]] None
[ LOG self.p_int[2] = 10  :  self.p_value[1]] None
[ LOG self.p_int[2] = 10  :  self.p_value[2]] None
[ POST LOG self.p_int[2] = 10  :  self.p_key[0]] None
[ POST LOG self.p_int[2] = 10  :  self.p_key[1]] None
[ POST LOG self.p_int[2] = 10  :  self.p_key[2]] None
[ POST LOG self.p_int[2] = 10  :  self.p_value[0]] None
[ POST LOG self.p_int[2] = 10  :  self.p_value[1]] None
[ POST LOG self.p_int[2] = 10  :  self.p_value[2]] None
[ LOG self.p_value[2] = self.p_int[1]  :  self.p_key[0]] None
[ LOG self.p_value[2] = self.p_int[1]  :  self.p_key[1]] None
[ LOG self.p_value[2] = self.p_int[1]  :  self.p_key[2]] None
[ LOG self.p_value[2] = self.p_int[1]  :  self.p_value[0]] None
[ LOG self.p_value[2] = self.p_int[1]  :  self.p_value[1]] None
[ LOG self.p_value[2] = self.p_int[1]  :  self.p_value[2]] None
[ POST LOG self.p_value[2] = self.p_int[1]  :  self.p_key[0]] None
[ POST LOG self.p_value[2] = self.p_int[1]  :  self.p_key[1]] None
[ POST LOG self.p_value[2] = self.p_int[1]  :  self.p_key[2]] None
[ POST LOG self.p_value[2] = self.p_int[1]  :  self.p_value[0]] None
[ POST LOG self.p_value[2] = self.p_int[1]  :  self.p_value[1]] None
[ POST LOG self.p_value[2] = self.p_int[1]  :  self.p_value[2]] 6
[ LOG self.p_char[2] ="c"  :  self.p_key[0]] None
[ LOG self.p_char[2] ="c"  :  self.p_key[1]] None
[ LOG self.p_char[2] ="c"  :  self.p_key[2]] None
[ LOG self.p_char[2] ="c"  :  self.p_value[0]] None
[ LOG self.p_char[2] ="c"  :  self.p_value[1]] None
[ LOG self.p_char[2] ="c"  :  self.p_value[2]] 6
[ POST LOG self.p_char[2] ="c"  :  self.p_key[0]] None
[ POST LOG self.p_char[2] ="c"  :  self.p_key[1]] None
[ POST LOG self.p_char[2] ="c"  :  self.p_key[2]] None
[ POST LOG self.p_char[2] ="c"  :  self.p_value[0]] None
[ POST LOG self.p_char[2] ="c"  :  self.p_value[1]] None
[ POST LOG self.p_char[2] ="c"  :  self.p_value[2]] 6
[ LOG self.p_int[0] = 9  :  self.p_key[0]] None
[ LOG self.p_int[0] = 9  :  self.p_key[1]] None
[ LOG self.p_int[0] = 9  :  self.p_key[2]] None
[ LOG self.p_int[0] = 9  :  self.p_value[0]] None
[ LOG self.p_int[0] = 9  :  self.p_value[1]] None
[ LOG self.p_int[0] = 9  :  self.p_value[2]] 6
[ POST LOG self.p_int[0] = 9  :  self.p_key[0]] None
[ POST LOG self.p_int[0] = 9  :  self.p_key[1]] None
[ POST LOG self.p_int[0] = 9  :  self.p_key[2]] None
[ POST LOG self.p_int[0] = 9  :  self.p_value[0]] None
[ POST LOG self.p_int[0] = 9  :  self.p_value[1]] None
[ POST LOG self.p_int[0] = 9  :  self.p_value[2]] 6
[ LOG self.p_char[0] ="a"  :  self.p_key[0]] None
[ LOG self.p_char[0] ="a"  :  self.p_key[1]] None
[ LOG self.p_char[0] ="a"  :  self.p_key[2]] None
[ LOG self.p_char[0] ="a"  :  self.p_value[0]] None
[ LOG self.p_char[0] ="a"  :  self.p_value[1]] None
[ LOG self.p_char[0] ="a"  :  self.p_value[2]] 6
[ POST LOG self.p_char[0] ="a"  :  self.p_key[0]] None
[ POST LOG self.p_char[0] ="a"  :  self.p_key[1]] None
[ POST LOG self.p_char[0] ="a"  :  self.p_key[2]] None
[ POST LOG self.p_char[0] ="a"  :  self.p_value[0]] None
[ POST LOG self.p_char[0] ="a"  :  self.p_value[1]] None
[ POST LOG self.p_char[0] ="a"  :  self.p_value[2]] 6
[ LOG self.p_int[1] = 6  :  self.p_key[0]] None
[ LOG self.p_int[1] = 6  :  self.p_key[1]] None
[ LOG self.p_int[1] = 6  :  self.p_key[2]] None
[ LOG self.p_int[1] = 6  :  self.p_value[0]] None
[ LOG self.p_int[1] = 6  :  self.p_value[1]] None
[ LOG self.p_int[1] = 6  :  self.p_value[2]] 6
[ POST LOG self.p_int[1] = 6  :  self.p_key[0]] None
[ POST LOG self.p_int[1] = 6  :  self.p_key[1]] None
[ POST LOG self.p_int[1] = 6  :  self.p_key[2]] None
[ POST LOG self.p_int[1] = 6  :  self.p_value[0]] None
[ POST LOG self.p_int[1] = 6  :  self.p_value[1]] None
[ POST LOG self.p_int[1] = 6  :  self.p_value[2]] 6
[ LOG self.p_string[2] = self.p_char[2]  :  self.p_key[0]] None
[ LOG self.p_string[2] = self.p_char[2]  :  self.p_key[1]] None
[ LOG self.p_string[2] = self.p_char[2]  :  self.p_key[2]] None
[ LOG self.p_string[2] = self.p_char[2]  :  self.p_value[0]] None
[ LOG self.p_string[2] = self.p_char[2]  :  self.p_value[1]] None
[ LOG self.p_string[2] = self.p_char[2]  :  self.p_value[2]] 6
[ POST LOG self.p_string[2] = self.p_char[2]  :  self.p_key[0]] None
[ POST LOG self.p_string[2] = self.p_char[2]  :  self.p_key[1]] None
[ POST LOG self.p_string[2] = self.p_char[2]  :  self.p_key[2]] None
[ POST LOG self.p_string[2] = self.p_char[2]  :  self.p_value[0]] None
[ POST LOG self.p_string[2] = self.p_char[2]  :  self.p_value[1]] None
[ POST LOG self.p_string[2] = self.p_char[2]  :  self.p_value[2]] 6
[ LOG self.p_key[2] = self.p_int[0]  :  self.p_key[0]] None
[ LOG self.p_key[2] = self.p_int[0]  :  self.p_key[1]] None
[ LOG self.p_key[2] = self.p_int[0]  :  self.p_key[2]] None
[ LOG self.p_key[2] = self.p_int[0]  :  self.p_value[0]] None
[ LOG self.p_key[2] = self.p_int[0]  :  self.p_value[1]] None
[ LOG self.p_key[2] = self.p_int[0]  :  self.p_value[2]] 6
[ POST LOG self.p_key[2] = self.p_int[0]  :  self.p_key[0]] None
[ POST LOG self.p_key[2] = self.p_int[0]  :  self.p_key[1]] None
[ POST LOG self.p_key[2] = self.p_int[0]  :  self.p_key[2]] 9
[ POST LOG self.p_key[2] = self.p_int[0]  :  self.p_value[0]] None
[ POST LOG self.p_key[2] = self.p_int[0]  :  self.p_value[1]] None
[ POST LOG self.p_key[2] = self.p_int[0]  :  self.p_value[2]] 6
[ LOG self.p_char[2] ="d"  :  self.p_key[0]] None
[ LOG self.p_char[2] ="d"  :  self.p_key[1]] None
[ LOG self.p_char[2] ="d"  :  self.p_key[2]] 9
[ LOG self.p_char[2] ="d"  :  self.p_value[0]] None
[ LOG self.p_char[2] ="d"  :  self.p_value[1]] None
[ LOG self.p_char[2] ="d"  :  self.p_value[2]] 6
[ POST LOG self.p_char[2] ="d"  :  self.p_key[0]] None
[ POST LOG self.p_char[2] ="d"  :  self.p_key[1]] None
[ POST LOG self.p_char[2] ="d"  :  self.p_key[2]] 9
[ POST LOG self.p_char[2] ="d"  :  self.p_value[0]] None
[ POST LOG self.p_char[2] ="d"  :  self.p_value[1]] None
[ POST LOG self.p_char[2] ="d"  :  self.p_value[2]] 6
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_key[0]] None
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_key[1]] None
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_key[2]] 9
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_value[0]] None
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_value[1]] None
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_value[2]] 6
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_key[0]] None
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_key[1]] 9
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_key[2]] 9
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_value[0]] None
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_value[1]] None
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_value[2]] 6
[ LOG self.p_btree[2] = OOBTree()  :  self.p_key[0]] None
[ LOG self.p_btree[2] = OOBTree()  :  self.p_key[1]] 9
[ LOG self.p_btree[2] = OOBTree()  :  self.p_key[2]] 9
[ LOG self.p_btree[2] = OOBTree()  :  self.p_value[0]] None
[ LOG self.p_btree[2] = OOBTree()  :  self.p_value[1]] None
[ LOG self.p_btree[2] = OOBTree()  :  self.p_value[2]] 6
[ POST LOG self.p_btree[2] = OOBTree()  :  self.p_key[0]] None
[ POST LOG self.p_btree[2] = OOBTree()  :  self.p_key[1]] 9
[ POST LOG self.p_btree[2] = OOBTree()  :  self.p_key[2]] 9
[ POST LOG self.p_btree[2] = OOBTree()  :  self.p_value[0]] None
[ POST LOG self.p_btree[2] = OOBTree()  :  self.p_value[1]] None
[ POST LOG self.p_btree[2] = OOBTree()  :  self.p_value[2]] 6
[ POST LOG self.p_btree[2] = OOBTree()  :  list(self.p_btree[2].items())] []
[ LOG self.p_char[1] ="d"  :  self.p_key[0]] None
[ LOG self.p_char[1] ="d"  :  self.p_key[1]] 9
[ LOG self.p_char[1] ="d"  :  self.p_key[2]] 9
[ LOG self.p_char[1] ="d"  :  self.p_value[0]] None
[ LOG self.p_char[1] ="d"  :  self.p_value[1]] None
[ LOG self.p_char[1] ="d"  :  self.p_value[2]] 6
[ LOG self.p_char[1] ="d"  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_char[1] ="d"  :  self.p_key[0]] None
[ POST LOG self.p_char[1] ="d"  :  self.p_key[1]] 9
[ POST LOG self.p_char[1] ="d"  :  self.p_key[2]] 9
[ POST LOG self.p_char[1] ="d"  :  self.p_value[0]] None
[ POST LOG self.p_char[1] ="d"  :  self.p_value[1]] None
[ POST LOG self.p_char[1] ="d"  :  self.p_value[2]] 6
[ POST LOG self.p_char[1] ="d"  :  list(self.p_btree[2].items())] []
[ LOG self.p_int[0] = 8  :  self.p_key[0]] None
[ LOG self.p_int[0] = 8  :  self.p_key[1]] 9
[ LOG self.p_int[0] = 8  :  self.p_key[2]] 9
[ LOG self.p_int[0] = 8  :  self.p_value[0]] None
[ LOG self.p_int[0] = 8  :  self.p_value[1]] None
[ LOG self.p_int[0] = 8  :  self.p_value[2]] 6
[ LOG self.p_int[0] = 8  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_int[0] = 8  :  self.p_key[0]] None
[ POST LOG self.p_int[0] = 8  :  self.p_key[1]] 9
[ POST LOG self.p_int[0] = 8  :  self.p_key[2]] 9
[ POST LOG self.p_int[0] = 8  :  self.p_value[0]] None
[ POST LOG self.p_int[0] = 8  :  self.p_value[1]] None
[ POST LOG self.p_int[0] = 8  :  self.p_value[2]] 6
[ POST LOG self.p_int[0] = 8  :  list(self.p_btree[2].items())] []
[ LOG self.p_key[0] = self.p_int[0]  :  self.p_key[0]] None
[ LOG self.p_key[0] = self.p_int[0]  :  self.p_key[1]] 9
[ LOG self.p_key[0] = self.p_int[0]  :  self.p_key[2]] 9
[ LOG self.p_key[0] = self.p_int[0]  :  self.p_value[0]] None
[ LOG self.p_key[0] = self.p_int[0]  :  self.p_value[1]] None
[ LOG self.p_key[0] = self.p_int[0]  :  self.p_value[2]] 6
[ LOG self.p_key[0] = self.p_int[0]  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_key[0] = self.p_int[0]  :  self.p_key[0]] 8
[ POST LOG self.p_key[0] = self.p_int[0]  :  self.p_key[1]] 9
[ POST LOG self.p_key[0] = self.p_int[0]  :  self.p_key[2]] 9
[ POST LOG self.p_key[0] = self.p_int[0]  :  self.p_value[0]] None
[ POST LOG self.p_key[0] = self.p_int[0]  :  self.p_value[1]] None
[ POST LOG self.p_key[0] = self.p_int[0]  :  self.p_value[2]] 6
[ POST LOG self.p_key[0] = self.p_int[0]  :  list(self.p_btree[2].items())] []
[ LOG self.p_string[1] = self.p_char[0]  :  self.p_key[0]] 8
[ LOG self.p_string[1] = self.p_char[0]  :  self.p_key[1]] 9
[ LOG self.p_string[1] = self.p_char[0]  :  self.p_key[2]] 9
[ LOG self.p_string[1] = self.p_char[0]  :  self.p_value[0]] None
[ LOG self.p_string[1] = self.p_char[0]  :  self.p_value[1]] None
[ LOG self.p_string[1] = self.p_char[0]  :  self.p_value[2]] 6
[ LOG self.p_string[1] = self.p_char[0]  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_string[1] = self.p_char[0]  :  self.p_key[0]] 8
[ POST LOG self.p_string[1] = self.p_char[0]  :  self.p_key[1]] 9
[ POST LOG self.p_string[1] = self.p_char[0]  :  self.p_key[2]] 9
[ POST LOG self.p_string[1] = self.p_char[0]  :  self.p_value[0]] None
[ POST LOG self.p_string[1] = self.p_char[0]  :  self.p_value[1]] None
[ POST LOG self.p_string[1] = self.p_char[0]  :  self.p_value[2]] 6
[ POST LOG self.p_string[1] = self.p_char[0]  :  list(self.p_btree[2].items())] []
[ LOG self.p_int[0] = 4  :  self.p_key[0]] 8
[ LOG self.p_int[0] = 4  :  self.p_key[1]] 9
[ LOG self.p_int[0] = 4  :  self.p_key[2]] 9
[ LOG self.p_int[0] = 4  :  self.p_value[0]] None
[ LOG self.p_int[0] = 4  :  self.p_value[1]] None
[ LOG self.p_int[0] = 4  :  self.p_value[2]] 6
[ LOG self.p_int[0] = 4  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_int[0] = 4  :  self.p_key[0]] 8
[ POST LOG self.p_int[0] = 4  :  self.p_key[1]] 9
[ POST LOG self.p_int[0] = 4  :  self.p_key[2]] 9
[ POST LOG self.p_int[0] = 4  :  self.p_value[0]] None
[ POST LOG self.p_int[0] = 4  :  self.p_value[1]] None
[ POST LOG self.p_int[0] = 4  :  self.p_value[2]] 6
[ POST LOG self.p_int[0] = 4  :  list(self.p_btree[2].items())] []
[ LOG self.p_string[2] += self.p_char[0]  :  self.p_key[0]] 8
[ LOG self.p_string[2] += self.p_char[0]  :  self.p_key[1]] 9
[ LOG self.p_string[2] += self.p_char[0]  :  self.p_key[2]] 9
[ LOG self.p_string[2] += self.p_char[0]  :  self.p_value[0]] None
[ LOG self.p_string[2] += self.p_char[0]  :  self.p_value[1]] None
[ LOG self.p_string[2] += self.p_char[0]  :  self.p_value[2]] 6
[ LOG self.p_string[2] += self.p_char[0]  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_string[2] += self.p_char[0]  :  self.p_key[0]] 8
[ POST LOG self.p_string[2] += self.p_char[0]  :  self.p_key[1]] 9
[ POST LOG self.p_string[2] += self.p_char[0]  :  self.p_key[2]] 9
[ POST LOG self.p_string[2] += self.p_char[0]  :  self.p_value[0]] None
[ POST LOG self.p_string[2] += self.p_char[0]  :  self.p_value[1]] None
[ POST LOG self.p_string[2] += self.p_char[0]  :  self.p_value[2]] 6
[ POST LOG self.p_string[2] += self.p_char[0]  :  list(self.p_btree[2].items())] []
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_key[0]] 8
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_key[1]] 9
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_key[2]] 9
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_value[0]] None
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_value[1]] None
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_value[2]] 6
[ LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_key[0]] 8
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_key[1]] 9
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_key[2]] 9
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_value[0]] None
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_value[1]] None
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_value[2]] 6
[ POST LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[2].items())] []
[ LOG self.p_btree[1] = OOBTree()  :  self.p_key[0]] 8
[ LOG self.p_btree[1] = OOBTree()  :  self.p_key[1]] 9
[ LOG self.p_btree[1] = OOBTree()  :  self.p_key[2]] 9
[ LOG self.p_btree[1] = OOBTree()  :  self.p_value[0]] None
[ LOG self.p_btree[1] = OOBTree()  :  self.p_value[1]] None
[ LOG self.p_btree[1] = OOBTree()  :  self.p_value[2]] 6
[ LOG self.p_btree[1] = OOBTree()  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_btree[1] = OOBTree()  :  self.p_key[0]] 8
[ POST LOG self.p_btree[1] = OOBTree()  :  self.p_key[1]] 9
[ POST LOG self.p_btree[1] = OOBTree()  :  self.p_key[2]] 9
[ POST LOG self.p_btree[1] = OOBTree()  :  self.p_value[0]] None
[ POST LOG self.p_btree[1] = OOBTree()  :  self.p_value[1]] None
[ POST LOG self.p_btree[1] = OOBTree()  :  self.p_value[2]] 6
[ POST LOG self.p_btree[1] = OOBTree()  :  list(self.p_btree[1].items())] []
[ POST LOG self.p_btree[1] = OOBTree()  :  list(self.p_btree[2].items())] []
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[0]] 8
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[1]] 9
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[2]] 9
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[0]] None
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[1]] None
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[2]] 6
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[1].items())	] []
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[0]] 8
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[1]] 9
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[2]] 9
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[0]] None
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[1]] None
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[2]] 6
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[1].items())] [(8, 6)]
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[2].items())] []
[ LOG self.p_value[1] = self.p_int[2]  :  self.p_key[0]] 8
[ LOG self.p_value[1] = self.p_int[2]  :  self.p_key[1]] 9
[ LOG self.p_value[1] = self.p_int[2]  :  self.p_key[2]] 9
[ LOG self.p_value[1] = self.p_int[2]  :  self.p_value[0]] None
[ LOG self.p_value[1] = self.p_int[2]  :  self.p_value[1]] None
[ LOG self.p_value[1] = self.p_int[2]  :  self.p_value[2]] 6
[ LOG self.p_value[1] = self.p_int[2]  :  list(self.p_btree[1].items())	] [(8, 6)]
[ LOG self.p_value[1] = self.p_int[2]  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_value[1] = self.p_int[2]  :  self.p_key[0]] 8
[ POST LOG self.p_value[1] = self.p_int[2]  :  self.p_key[1]] 9
[ POST LOG self.p_value[1] = self.p_int[2]  :  self.p_key[2]] 9
[ POST LOG self.p_value[1] = self.p_int[2]  :  self.p_value[0]] None
[ POST LOG self.p_value[1] = self.p_int[2]  :  self.p_value[1]] 10
[ POST LOG self.p_value[1] = self.p_int[2]  :  self.p_value[2]] 6
[ POST LOG self.p_value[1] = self.p_int[2]  :  list(self.p_btree[1].items())] [(8, 6)]
[ POST LOG self.p_value[1] = self.p_int[2]  :  list(self.p_btree[2].items())] []
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[0]] 8
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[1]] 9
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[2]] 9
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[0]] None
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[1]] 10
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[2]] 6
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[1].items())	] [(8, 6)]
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[0]] 8
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[1]] 9
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[2]] 9
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[0]] None
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[1]] 10
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[2]] 6
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[1].items())] [(8, 6), (9, 6)]
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[2].items())] []
[ LOG self.p_key[0] = self.p_string[1]  :  self.p_key[0]] 8
[ LOG self.p_key[0] = self.p_string[1]  :  self.p_key[1]] 9
[ LOG self.p_key[0] = self.p_string[1]  :  self.p_key[2]] 9
[ LOG self.p_key[0] = self.p_string[1]  :  self.p_value[0]] None
[ LOG self.p_key[0] = self.p_string[1]  :  self.p_value[1]] 10
[ LOG self.p_key[0] = self.p_string[1]  :  self.p_value[2]] 6
[ LOG self.p_key[0] = self.p_string[1]  :  list(self.p_btree[1].items())	] [(8, 6), (9, 6)]
[ LOG self.p_key[0] = self.p_string[1]  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_key[0] = self.p_string[1]  :  self.p_key[0]] a
[ POST LOG self.p_key[0] = self.p_string[1]  :  self.p_key[1]] 9
[ POST LOG self.p_key[0] = self.p_string[1]  :  self.p_key[2]] 9
[ POST LOG self.p_key[0] = self.p_string[1]  :  self.p_value[0]] None
[ POST LOG self.p_key[0] = self.p_string[1]  :  self.p_value[1]] 10
[ POST LOG self.p_key[0] = self.p_string[1]  :  self.p_value[2]] 6
[ POST LOG self.p_key[0] = self.p_string[1]  :  list(self.p_btree[1].items())] [(8, 6), (9, 6)]
[ POST LOG self.p_key[0] = self.p_string[1]  :  list(self.p_btree[2].items())] []
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[0]] a
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[1]] 9
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[2]] 9
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[0]] None
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[1]] 10
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[2]] 6
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[1].items())	] [(8, 6), (9, 6)]
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[0]] a
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[1]] 9
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[2]] 9
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[0]] None
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[1]] 10
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[2]] 6
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[1].items())] [(8, 6), (9, 6)]
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[2].items())] [(9, 6)]
[ LOG self.p_int[2] = 1  :  self.p_key[0]] a
[ LOG self.p_int[2] = 1  :  self.p_key[1]] 9
[ LOG self.p_int[2] = 1  :  self.p_key[2]] 9
[ LOG self.p_int[2] = 1  :  self.p_value[0]] None
[ LOG self.p_int[2] = 1  :  self.p_value[1]] 10
[ LOG self.p_int[2] = 1  :  self.p_value[2]] 6
[ LOG self.p_int[2] = 1  :  list(self.p_btree[1].items())	] [(8, 6), (9, 6)]
[ LOG self.p_int[2] = 1  :  list(self.p_btree[2].items())	] [(9, 6)]
[ POST LOG self.p_int[2] = 1  :  self.p_key[0]] a
[ POST LOG self.p_int[2] = 1  :  self.p_key[1]] 9
[ POST LOG self.p_int[2] = 1  :  self.p_key[2]] 9
[ POST LOG self.p_int[2] = 1  :  self.p_value[0]] None
[ POST LOG self.p_int[2] = 1  :  self.p_value[1]] 10
[ POST LOG self.p_int[2] = 1  :  self.p_value[2]] 6
[ POST LOG self.p_int[2] = 1  :  list(self.p_btree[1].items())] [(8, 6), (9, 6)]
[ POST LOG self.p_int[2] = 1  :  list(self.p_btree[2].items())] [(9, 6)]
[ LOG self.p_char[0] ="d"  :  self.p_key[0]] a
[ LOG self.p_char[0] ="d"  :  self.p_key[1]] 9
[ LOG self.p_char[0] ="d"  :  self.p_key[2]] 9
[ LOG self.p_char[0] ="d"  :  self.p_value[0]] None
[ LOG self.p_char[0] ="d"  :  self.p_value[1]] 10
[ LOG self.p_char[0] ="d"  :  self.p_value[2]] 6
[ LOG self.p_char[0] ="d"  :  list(self.p_btree[1].items())	] [(8, 6), (9, 6)]
[ LOG self.p_char[0] ="d"  :  list(self.p_btree[2].items())	] [(9, 6)]
[ POST LOG self.p_char[0] ="d"  :  self.p_key[0]] a
[ POST LOG self.p_char[0] ="d"  :  self.p_key[1]] 9
[ POST LOG self.p_char[0] ="d"  :  self.p_key[2]] 9
[ POST LOG self.p_char[0] ="d"  :  self.p_value[0]] None
[ POST LOG self.p_char[0] ="d"  :  self.p_value[1]] 10
[ POST LOG self.p_char[0] ="d"  :  self.p_value[2]] 6
[ POST LOG self.p_char[0] ="d"  :  list(self.p_btree[1].items())] [(8, 6), (9, 6)]
[ POST LOG self.p_char[0] ="d"  :  list(self.p_btree[2].items())] [(9, 6)]
[ LOG self.p_string[1] += self.p_char[2]  :  self.p_key[0]] a
[ LOG self.p_string[1] += self.p_char[2]  :  self.p_key[1]] 9
[ LOG self.p_string[1] += self.p_char[2]  :  self.p_key[2]] 9
[ LOG self.p_string[1] += self.p_char[2]  :  self.p_value[0]] None
[ LOG self.p_string[1] += self.p_char[2]  :  self.p_value[1]] 10
[ LOG self.p_string[1] += self.p_char[2]  :  self.p_value[2]] 6
[ LOG self.p_string[1] += self.p_char[2]  :  list(self.p_btree[1].items())	] [(8, 6), (9, 6)]
[ LOG self.p_string[1] += self.p_char[2]  :  list(self.p_btree[2].items())	] [(9, 6)]
[ POST LOG self.p_string[1] += self.p_char[2]  :  self.p_key[0]] a
[ POST LOG self.p_string[1] += self.p_char[2]  :  self.p_key[1]] 9
[ POST LOG self.p_string[1] += self.p_char[2]  :  self.p_key[2]] 9
[ POST LOG self.p_string[1] += self.p_char[2]  :  self.p_value[0]] None
[ POST LOG self.p_string[1] += self.p_char[2]  :  self.p_value[1]] 10
[ POST LOG self.p_string[1] += self.p_char[2]  :  self.p_value[2]] 6
[ POST LOG self.p_string[1] += self.p_char[2]  :  list(self.p_btree[1].items())] [(8, 6), (9, 6)]
[ POST LOG self.p_string[1] += self.p_char[2]  :  list(self.p_btree[2].items())] [(9, 6)]
[ LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  self.p_key[0]] a
[ LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  self.p_key[1]] 9
[ LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  self.p_key[2]] 9
[ LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  self.p_value[0]] None
[ LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  self.p_value[1]] 10
[ LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  self.p_value[2]] 6
[ LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[1].items())	] [(8, 6), (9, 6)]
[ LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[2].items())	] [(9, 6)]
[ POST LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  self.p_key[0]] a
[ POST LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  self.p_key[1]] 9
[ POST LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  self.p_key[2]] 9
[ POST LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  self.p_value[0]] None
[ POST LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  self.p_value[1]] 10
[ POST LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  self.p_value[2]] 6
[ POST LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[1].items())] [(8, 6), (9, 6)]
[ POST LOG self.p_btree[2].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[2].items())] [(9, 6)]
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[0]] a
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[1]] 9
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[2]] 9
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[0]] None
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[1]] 10
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[2]] 6
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[1].items())	] [(8, 6), (9, 6)]
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[2].items())	] [(9, 6)]
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[0]] a
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[1]] 9
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[2]] 9
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[0]] None
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[1]] 10
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[2]] 6
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[1].items())] [(8, 6)]
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[2].items())] [(9, 6)]
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_key[0]] a
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_key[1]] 9
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_key[2]] 9
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_value[0]] None
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_value[1]] 10
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_value[2]] 6
[ LOG self.p_key[2] = self.p_string[1]  :  list(self.p_btree[1].items())	] [(8, 6)]
[ LOG self.p_key[2] = self.p_string[1]  :  list(self.p_btree[2].items())	] [(9, 6)]
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_key[0]] a
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_key[1]] 9
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_key[2]] ad
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_value[0]] None
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_value[1]] 10
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_value[2]] 6
[ POST LOG self.p_key[2] = self.p_string[1]  :  list(self.p_btree[1].items())] [(8, 6)]
[ POST LOG self.p_key[2] = self.p_string[1]  :  list(self.p_btree[2].items())] [(9, 6)]
[ LOG self.p_char[2] ="b"  :  self.p_key[0]] a
[ LOG self.p_char[2] ="b"  :  self.p_key[1]] 9
[ LOG self.p_char[2] ="b"  :  self.p_key[2]] ad
[ LOG self.p_char[2] ="b"  :  self.p_value[0]] None
[ LOG self.p_char[2] ="b"  :  self.p_value[1]] 10
[ LOG self.p_char[2] ="b"  :  self.p_value[2]] 6
[ LOG self.p_char[2] ="b"  :  list(self.p_btree[1].items())	] [(8, 6)]
[ LOG self.p_char[2] ="b"  :  list(self.p_btree[2].items())	] [(9, 6)]
[ POST LOG self.p_char[2] ="b"  :  self.p_key[0]] a
[ POST LOG self.p_char[2] ="b"  :  self.p_key[1]] 9
[ POST LOG self.p_char[2] ="b"  :  self.p_key[2]] ad
[ POST LOG self.p_char[2] ="b"  :  self.p_value[0]] None
[ POST LOG self.p_char[2] ="b"  :  self.p_value[1]] 10
[ POST LOG self.p_char[2] ="b"  :  self.p_value[2]] 6
[ POST LOG self.p_char[2] ="b"  :  list(self.p_btree[1].items())] [(8, 6)]
[ POST LOG self.p_char[2] ="b"  :  list(self.p_btree[2].items())] [(9, 6)]
[ LOG self.p_btree[0] = OOBTree()  :  self.p_key[0]] a
[ LOG self.p_btree[0] = OOBTree()  :  self.p_key[1]] 9
[ LOG self.p_btree[0] = OOBTree()  :  self.p_key[2]] ad
[ LOG self.p_btree[0] = OOBTree()  :  self.p_value[0]] None
[ LOG self.p_btree[0] = OOBTree()  :  self.p_value[1]] 10
[ LOG self.p_btree[0] = OOBTree()  :  self.p_value[2]] 6
[ LOG self.p_btree[0] = OOBTree()  :  list(self.p_btree[1].items())	] [(8, 6)]
[ LOG self.p_btree[0] = OOBTree()  :  list(self.p_btree[2].items())	] [(9, 6)]
[ POST LOG self.p_btree[0] = OOBTree()  :  self.p_key[0]] a
[ POST LOG self.p_btree[0] = OOBTree()  :  self.p_key[1]] 9
[ POST LOG self.p_btree[0] = OOBTree()  :  self.p_key[2]] ad
[ POST LOG self.p_btree[0] = OOBTree()  :  self.p_value[0]] None
[ POST LOG self.p_btree[0] = OOBTree()  :  self.p_value[1]] 10
[ POST LOG self.p_btree[0] = OOBTree()  :  self.p_value[2]] 6
[ POST LOG self.p_btree[0] = OOBTree()  :  list(self.p_btree[0].items())] []
[ POST LOG self.p_btree[0] = OOBTree()  :  list(self.p_btree[1].items())] [(8, 6)]
[ POST LOG self.p_btree[0] = OOBTree()  :  list(self.p_btree[2].items())] [(9, 6)]
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  self.p_key[0]] a
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  self.p_key[1]] 9
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  self.p_key[2]] ad
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  self.p_value[0]] None
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  self.p_value[1]] 10
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  self.p_value[2]] 6
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  list(self.p_btree[0].items())	] []
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  list(self.p_btree[1].items())	] [(8, 6)]
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  list(self.p_btree[2].items())	] [(9, 6)]
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  self.p_key[0]] a
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  self.p_key[1]] 9
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  self.p_key[2]] ad
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  self.p_value[0]] None
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  self.p_value[1]] 10
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  self.p_value[2]] 6
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  list(self.p_btree[0].items())] []
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  list(self.p_btree[1].items())] [(8, 6), ('a', 10)]
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[1]})  :  list(self.p_btree[2].items())] [(9, 6)]
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[0]] a
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[1]] 9
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[2]] ad
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[0]] None
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[1]] 10
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[2]] 6
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[0].items())	] []
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[1].items())	] [(8, 6), ('a', 10)]
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[2].items())	] [(9, 6)]
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[0]] a
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[1]] 9
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[2]] ad
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[0]] None
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[1]] 10
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[2]] 6
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[0].items())] []
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[1].items())] [(8, 6), ('a', 10)]
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[2].items())] [(9, 6), ('ad', 6)]
[ LOG self.p_string[1] = self.p_char[0]  :  self.p_key[0]] a
[ LOG self.p_string[1] = self.p_char[0]  :  self.p_key[1]] 9
[ LOG self.p_string[1] = self.p_char[0]  :  self.p_key[2]] ad
[ LOG self.p_string[1] = self.p_char[0]  :  self.p_value[0]] None
[ LOG self.p_string[1] = self.p_char[0]  :  self.p_value[1]] 10
[ LOG self.p_string[1] = self.p_char[0]  :  self.p_value[2]] 6
[ LOG self.p_string[1] = self.p_char[0]  :  list(self.p_btree[0].items())	] []
[ LOG self.p_string[1] = self.p_char[0]  :  list(self.p_btree[1].items())	] [(8, 6), ('a', 10)]
[ LOG self.p_string[1] = self.p_char[0]  :  list(self.p_btree[2].items())	] [(9, 6), ('ad', 6)]
[ POST LOG self.p_string[1] = self.p_char[0]  :  self.p_key[0]] a
[ POST LOG self.p_string[1] = self.p_char[0]  :  self.p_key[1]] 9
[ POST LOG self.p_string[1] = self.p_char[0]  :  self.p_key[2]] ad
[ POST LOG self.p_string[1] = self.p_char[0]  :  self.p_value[0]] None
[ POST LOG self.p_string[1] = self.p_char[0]  :  self.p_value[1]] 10
[ POST LOG self.p_string[1] = self.p_char[0]  :  self.p_value[2]] 6
[ POST LOG self.p_string[1] = self.p_char[0]  :  list(self.p_btree[0].items())] []
[ POST LOG self.p_string[1] = self.p_char[0]  :  list(self.p_btree[1].items())] [(8, 6), ('a', 10)]
[ POST LOG self.p_string[1] = self.p_char[0]  :  list(self.p_btree[2].items())] [(9, 6), ('ad', 6)]
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_key[0]] a
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_key[1]] 9
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_key[2]] ad
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_value[0]] None
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_value[1]] 10
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_value[2]] 6
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  list(self.p_btree[0].items())	] []
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  list(self.p_btree[1].items())	] [(8, 6), ('a', 10)]
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  list(self.p_btree[2].items())	] [(9, 6), ('ad', 6)]
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_key[0]] a
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_key[1]] 9
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_key[2]] ad
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_value[0]] None
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_value[1]] 10
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_value[2]] 6
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  list(self.p_btree[0].items())] []
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  list(self.p_btree[1].items())] [(8, 6), ('a', 10)]
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  list(self.p_btree[2].items())] [('ad', 6)]
[ LOG self.p_char[1] ="b"  :  self.p_key[0]] a
[ LOG self.p_char[1] ="b"  :  self.p_key[1]] 9
[ LOG self.p_char[1] ="b"  :  self.p_key[2]] ad
[ LOG self.p_char[1] ="b"  :  self.p_value[0]] None
[ LOG self.p_char[1] ="b"  :  self.p_value[1]] 10
[ LOG self.p_char[1] ="b"  :  self.p_value[2]] 6
[ LOG self.p_char[1] ="b"  :  list(self.p_btree[0].items())	] []
[ LOG self.p_char[1] ="b"  :  list(self.p_btree[1].items())	] [(8, 6), ('a', 10)]
[ LOG self.p_char[1] ="b"  :  list(self.p_btree[2].items())	] [('ad', 6)]
[ POST LOG self.p_char[1] ="b"  :  self.p_key[0]] a
[ POST LOG self.p_char[1] ="b"  :  self.p_key[1]] 9
[ POST LOG self.p_char[1] ="b"  :  self.p_key[2]] ad
[ POST LOG self.p_char[1] ="b"  :  self.p_value[0]] None
[ POST LOG self.p_char[1] ="b"  :  self.p_value[1]] 10
[ POST LOG self.p_char[1] ="b"  :  self.p_value[2]] 6
[ POST LOG self.p_char[1] ="b"  :  list(self.p_btree[0].items())] []
[ POST LOG self.p_char[1] ="b"  :  list(self.p_btree[1].items())] [(8, 6), ('a', 10)]
[ POST LOG self.p_char[1] ="b"  :  list(self.p_btree[2].items())] [('ad', 6)]
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  self.p_key[0]] a
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  self.p_key[1]] 9
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  self.p_key[2]] ad
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  self.p_value[0]] None
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  self.p_value[1]] 10
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  self.p_value[2]] 6
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  list(self.p_btree[0].items())	] []
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  list(self.p_btree[1].items())	] [(8, 6), ('a', 10)]
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  list(self.p_btree[2].items())	] [('ad', 6)]
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  self.p_key[0]] a
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  self.p_key[1]] 9
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  self.p_key[2]] ad
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  self.p_value[0]] None
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  self.p_value[1]] 10
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  self.p_value[2]] 6
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  list(self.p_btree[0].items())] []
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  list(self.p_btree[1].items())] [(8, 6), ('a', 10)]
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[2]})  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[0]] a
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[1]] 9
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[2]] ad
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[0]] None
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[1]] 10
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[2]] 6
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[0].items())	] []
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[1].items())	] [(8, 6), ('a', 10)]
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[0]] a
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[1]] 9
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[2]] ad
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[0]] None
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[1]] 10
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[2]] 6
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[0].items())] []
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[1].items())] [(8, 6), ('a', 10)]
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[0]] a
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[1]] 9
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[2]] ad
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[0]] None
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[1]] 10
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[2]] 6
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[0].items())	] []
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[1].items())	] [(8, 6), ('a', 10)]
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[0]] a
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[1]] 9
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[2]] ad
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[0]] None
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[1]] 10
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[2]] 6
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[0].items())] [('ad', 10)]
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[1].items())] [(8, 6), ('a', 10)]
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_key[0]] a
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_key[1]] 9
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_key[2]] ad
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_value[0]] None
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_value[1]] 10
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_value[2]] 6
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  list(self.p_btree[0].items())	] [('ad', 10)]
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  list(self.p_btree[1].items())	] [(8, 6), ('a', 10)]
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_key[0]] a
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_key[1]] 9
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_key[2]] ad
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_value[0]] None
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_value[1]] 10
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_value[2]] 6
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  list(self.p_btree[0].items())] [('ad', 10)]
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  list(self.p_btree[1].items())] [(8, 6)]
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_value[1] = self.p_string[2]  :  self.p_key[0]] a
[ LOG self.p_value[1] = self.p_string[2]  :  self.p_key[1]] 9
[ LOG self.p_value[1] = self.p_string[2]  :  self.p_key[2]] ad
[ LOG self.p_value[1] = self.p_string[2]  :  self.p_value[0]] None
[ LOG self.p_value[1] = self.p_string[2]  :  self.p_value[1]] 10
[ LOG self.p_value[1] = self.p_string[2]  :  self.p_value[2]] 6
[ LOG self.p_value[1] = self.p_string[2]  :  list(self.p_btree[0].items())	] [('ad', 10)]
[ LOG self.p_value[1] = self.p_string[2]  :  list(self.p_btree[1].items())	] [(8, 6)]
[ LOG self.p_value[1] = self.p_string[2]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_value[1] = self.p_string[2]  :  self.p_key[0]] a
[ POST LOG self.p_value[1] = self.p_string[2]  :  self.p_key[1]] 9
[ POST LOG self.p_value[1] = self.p_string[2]  :  self.p_key[2]] ad
[ POST LOG self.p_value[1] = self.p_string[2]  :  self.p_value[0]] None
[ POST LOG self.p_value[1] = self.p_string[2]  :  self.p_value[1]] cad
[ POST LOG self.p_value[1] = self.p_string[2]  :  self.p_value[2]] 6
[ POST LOG self.p_value[1] = self.p_string[2]  :  list(self.p_btree[0].items())] [('ad', 10)]
[ POST LOG self.p_value[1] = self.p_string[2]  :  list(self.p_btree[1].items())] [(8, 6)]
[ POST LOG self.p_value[1] = self.p_string[2]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_key[0] = self.p_string[2]  :  self.p_key[0]] a
[ LOG self.p_key[0] = self.p_string[2]  :  self.p_key[1]] 9
[ LOG self.p_key[0] = self.p_string[2]  :  self.p_key[2]] ad
[ LOG self.p_key[0] = self.p_string[2]  :  self.p_value[0]] None
[ LOG self.p_key[0] = self.p_string[2]  :  self.p_value[1]] cad
[ LOG self.p_key[0] = self.p_string[2]  :  self.p_value[2]] 6
[ LOG self.p_key[0] = self.p_string[2]  :  list(self.p_btree[0].items())	] [('ad', 10)]
[ LOG self.p_key[0] = self.p_string[2]  :  list(self.p_btree[1].items())	] [(8, 6)]
[ LOG self.p_key[0] = self.p_string[2]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_key[0] = self.p_string[2]  :  self.p_key[0]] cad
[ POST LOG self.p_key[0] = self.p_string[2]  :  self.p_key[1]] 9
[ POST LOG self.p_key[0] = self.p_string[2]  :  self.p_key[2]] ad
[ POST LOG self.p_key[0] = self.p_string[2]  :  self.p_value[0]] None
[ POST LOG self.p_key[0] = self.p_string[2]  :  self.p_value[1]] cad
[ POST LOG self.p_key[0] = self.p_string[2]  :  self.p_value[2]] 6
[ POST LOG self.p_key[0] = self.p_string[2]  :  list(self.p_btree[0].items())] [('ad', 10)]
[ POST LOG self.p_key[0] = self.p_string[2]  :  list(self.p_btree[1].items())] [(8, 6)]
[ POST LOG self.p_key[0] = self.p_string[2]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_string[2] += self.p_char[0]  :  self.p_key[0]] cad
[ LOG self.p_string[2] += self.p_char[0]  :  self.p_key[1]] 9
[ LOG self.p_string[2] += self.p_char[0]  :  self.p_key[2]] ad
[ LOG self.p_string[2] += self.p_char[0]  :  self.p_value[0]] None
[ LOG self.p_string[2] += self.p_char[0]  :  self.p_value[1]] cad
[ LOG self.p_string[2] += self.p_char[0]  :  self.p_value[2]] 6
[ LOG self.p_string[2] += self.p_char[0]  :  list(self.p_btree[0].items())	] [('ad', 10)]
[ LOG self.p_string[2] += self.p_char[0]  :  list(self.p_btree[1].items())	] [(8, 6)]
[ LOG self.p_string[2] += self.p_char[0]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_string[2] += self.p_char[0]  :  self.p_key[0]] cad
[ POST LOG self.p_string[2] += self.p_char[0]  :  self.p_key[1]] 9
[ POST LOG self.p_string[2] += self.p_char[0]  :  self.p_key[2]] ad
[ POST LOG self.p_string[2] += self.p_char[0]  :  self.p_value[0]] None
[ POST LOG self.p_string[2] += self.p_char[0]  :  self.p_value[1]] cad
[ POST LOG self.p_string[2] += self.p_char[0]  :  self.p_value[2]] 6
[ POST LOG self.p_string[2] += self.p_char[0]  :  list(self.p_btree[0].items())] [('ad', 10)]
[ POST LOG self.p_string[2] += self.p_char[0]  :  list(self.p_btree[1].items())] [(8, 6)]
[ POST LOG self.p_string[2] += self.p_char[0]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_key[1] = self.p_string[1]  :  self.p_key[0]] cad
[ LOG self.p_key[1] = self.p_string[1]  :  self.p_key[1]] 9
[ LOG self.p_key[1] = self.p_string[1]  :  self.p_key[2]] ad
[ LOG self.p_key[1] = self.p_string[1]  :  self.p_value[0]] None
[ LOG self.p_key[1] = self.p_string[1]  :  self.p_value[1]] cad
[ LOG self.p_key[1] = self.p_string[1]  :  self.p_value[2]] 6
[ LOG self.p_key[1] = self.p_string[1]  :  list(self.p_btree[0].items())	] [('ad', 10)]
[ LOG self.p_key[1] = self.p_string[1]  :  list(self.p_btree[1].items())	] [(8, 6)]
[ LOG self.p_key[1] = self.p_string[1]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_key[1] = self.p_string[1]  :  self.p_key[0]] cad
[ POST LOG self.p_key[1] = self.p_string[1]  :  self.p_key[1]] d
[ POST LOG self.p_key[1] = self.p_string[1]  :  self.p_key[2]] ad
[ POST LOG self.p_key[1] = self.p_string[1]  :  self.p_value[0]] None
[ POST LOG self.p_key[1] = self.p_string[1]  :  self.p_value[1]] cad
[ POST LOG self.p_key[1] = self.p_string[1]  :  self.p_value[2]] 6
[ POST LOG self.p_key[1] = self.p_string[1]  :  list(self.p_btree[0].items())] [('ad', 10)]
[ POST LOG self.p_key[1] = self.p_string[1]  :  list(self.p_btree[1].items())] [(8, 6)]
[ POST LOG self.p_key[1] = self.p_string[1]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[0]] cad
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[1]] d
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[2]] ad
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[0]] None
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[1]] cad
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[2]] 6
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[0].items())	] [('ad', 10)]
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[1].items())	] [(8, 6)]
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[0]] cad
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[1]] d
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[2]] ad
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[0]] None
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[1]] cad
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[2]] 6
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[0].items())] [('ad', 10)]
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad')]
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[0]] cad
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[1]] d
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[2]] ad
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[0]] None
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[1]] cad
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[2]] 6
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[0].items())	] [('ad', 10)]
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad')]
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[0]] cad
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[1]] d
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[2]] ad
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[0]] None
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[1]] cad
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[2]] 6
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[0].items())] [('ad', 10)]
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 6)]
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[0]] cad
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[1]] d
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[2]] ad
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[0]] None
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[1]] cad
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[2]] 6
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[0].items())	] [('ad', 10)]
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 6)]
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[0]] cad
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[1]] d
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[2]] ad
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[0]] None
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[1]] cad
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[2]] 6
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[0].items())] [('ad', 10)]
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad')]
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  self.p_key[0]] cad
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  self.p_key[1]] d
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  self.p_key[2]] ad
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  self.p_value[0]] None
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  self.p_value[1]] cad
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  self.p_value[2]] 6
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  list(self.p_btree[0].items())	] [('ad', 10)]
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad')]
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  self.p_key[0]] cad
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  self.p_key[1]] d
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  self.p_key[2]] ad
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  self.p_value[0]] None
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  self.p_value[1]] cad
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  self.p_value[2]] 6
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  list(self.p_btree[0].items())] [('ad', 10)]
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[1])  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_key[0]] cad
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_key[1]] d
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_key[2]] ad
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_value[0]] None
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_value[1]] cad
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_value[2]] 6
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  list(self.p_btree[0].items())	] [('ad', 10)]
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_btree[2].pop(self.p_key[1],0)  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_key[0]] cad
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_key[1]] d
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_key[2]] ad
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_value[0]] None
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_value[1]] cad
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  self.p_value[2]] 6
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  list(self.p_btree[0].items())] [('ad', 10)]
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_btree[2].pop(self.p_key[1],0)  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[0]] cad
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[1]] d
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[2]] ad
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[0]] None
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[1]] cad
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[2]] 6
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[0].items())	] [('ad', 10)]
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[0]] cad
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[1]] d
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[2]] ad
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[0]] None
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[1]] cad
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[2]] 6
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[0].items())] [('ad', 10)]
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad')]
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  self.p_key[0]] cad
[ LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  self.p_key[1]] d
[ LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  self.p_key[2]] ad
[ LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  self.p_value[0]] None
[ LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  self.p_value[1]] cad
[ LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  self.p_value[2]] 6
[ LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  list(self.p_btree[0].items())	] [('ad', 10)]
[ LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad')]
[ LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  self.p_key[0]] cad
[ POST LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  self.p_key[1]] d
[ POST LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  self.p_key[2]] ad
[ POST LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  self.p_value[0]] None
[ POST LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  self.p_value[1]] cad
[ POST LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  self.p_value[2]] 6
[ POST LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  list(self.p_btree[0].items())] [('ad', 10)]
[ POST LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_btree[1].update({self.p_key[1]:self.p_value[1]})  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_key[2] = self.p_string[2]  :  self.p_key[0]] cad
[ LOG self.p_key[2] = self.p_string[2]  :  self.p_key[1]] d
[ LOG self.p_key[2] = self.p_string[2]  :  self.p_key[2]] ad
[ LOG self.p_key[2] = self.p_string[2]  :  self.p_value[0]] None
[ LOG self.p_key[2] = self.p_string[2]  :  self.p_value[1]] cad
[ LOG self.p_key[2] = self.p_string[2]  :  self.p_value[2]] 6
[ LOG self.p_key[2] = self.p_string[2]  :  list(self.p_btree[0].items())	] [('ad', 10)]
[ LOG self.p_key[2] = self.p_string[2]  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_key[2] = self.p_string[2]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_key[2] = self.p_string[2]  :  self.p_key[0]] cad
[ POST LOG self.p_key[2] = self.p_string[2]  :  self.p_key[1]] d
[ POST LOG self.p_key[2] = self.p_string[2]  :  self.p_key[2]] cadd
[ POST LOG self.p_key[2] = self.p_string[2]  :  self.p_value[0]] None
[ POST LOG self.p_key[2] = self.p_string[2]  :  self.p_value[1]] cad
[ POST LOG self.p_key[2] = self.p_string[2]  :  self.p_value[2]] 6
[ POST LOG self.p_key[2] = self.p_string[2]  :  list(self.p_btree[0].items())] [('ad', 10)]
[ POST LOG self.p_key[2] = self.p_string[2]  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_key[2] = self.p_string[2]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_char[0] ="a"  :  self.p_key[0]] cad
[ LOG self.p_char[0] ="a"  :  self.p_key[1]] d
[ LOG self.p_char[0] ="a"  :  self.p_key[2]] cadd
[ LOG self.p_char[0] ="a"  :  self.p_value[0]] None
[ LOG self.p_char[0] ="a"  :  self.p_value[1]] cad
[ LOG self.p_char[0] ="a"  :  self.p_value[2]] 6
[ LOG self.p_char[0] ="a"  :  list(self.p_btree[0].items())	] [('ad', 10)]
[ LOG self.p_char[0] ="a"  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_char[0] ="a"  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_char[0] ="a"  :  self.p_key[0]] cad
[ POST LOG self.p_char[0] ="a"  :  self.p_key[1]] d
[ POST LOG self.p_char[0] ="a"  :  self.p_key[2]] cadd
[ POST LOG self.p_char[0] ="a"  :  self.p_value[0]] None
[ POST LOG self.p_char[0] ="a"  :  self.p_value[1]] cad
[ POST LOG self.p_char[0] ="a"  :  self.p_value[2]] 6
[ POST LOG self.p_char[0] ="a"  :  list(self.p_btree[0].items())] [('ad', 10)]
[ POST LOG self.p_char[0] ="a"  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_char[0] ="a"  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  self.p_key[0]] cad
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  self.p_key[1]] d
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  self.p_key[2]] cadd
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  self.p_value[0]] None
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  self.p_value[1]] cad
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  self.p_value[2]] 6
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[0].items())	] [('ad', 10)]
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  self.p_key[0]] cad
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  self.p_key[1]] d
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  self.p_key[2]] cadd
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  self.p_value[0]] None
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  self.p_value[1]] cad
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  self.p_value[2]] 6
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[0].items())] [('ad', 10), ('d', 6)]
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_key[0]] cad
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_key[1]] d
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_key[2]] cadd
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_value[0]] None
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_value[1]] cad
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_value[2]] 6
[ LOG self.p_value[2] = self.p_string[2]  :  list(self.p_btree[0].items())	] [('ad', 10), ('d', 6)]
[ LOG self.p_value[2] = self.p_string[2]  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_value[2] = self.p_string[2]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_key[0]] cad
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_key[1]] d
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_key[2]] cadd
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_value[0]] None
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_value[1]] cad
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_value[2]] cadd
[ POST LOG self.p_value[2] = self.p_string[2]  :  list(self.p_btree[0].items())] [('ad', 10), ('d', 6)]
[ POST LOG self.p_value[2] = self.p_string[2]  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_value[2] = self.p_string[2]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_key[0]] cad
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_key[1]] d
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_key[2]] cadd
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_value[0]] None
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_value[1]] cad
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_value[2]] cadd
[ LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[0].items())	] [('ad', 10), ('d', 6)]
[ LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_key[0]] cad
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_key[1]] d
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_key[2]] cadd
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_value[0]] None
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_value[1]] cad
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_value[2]] cadd
[ POST LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[0].items())] [('ad', 10), ('d', 6)]
[ POST LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_string[0] = self.p_char[1]  :  self.p_key[0]] cad
[ LOG self.p_string[0] = self.p_char[1]  :  self.p_key[1]] d
[ LOG self.p_string[0] = self.p_char[1]  :  self.p_key[2]] cadd
[ LOG self.p_string[0] = self.p_char[1]  :  self.p_value[0]] None
[ LOG self.p_string[0] = self.p_char[1]  :  self.p_value[1]] cad
[ LOG self.p_string[0] = self.p_char[1]  :  self.p_value[2]] cadd
[ LOG self.p_string[0] = self.p_char[1]  :  list(self.p_btree[0].items())	] [('ad', 10), ('d', 6)]
[ LOG self.p_string[0] = self.p_char[1]  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_string[0] = self.p_char[1]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_string[0] = self.p_char[1]  :  self.p_key[0]] cad
[ POST LOG self.p_string[0] = self.p_char[1]  :  self.p_key[1]] d
[ POST LOG self.p_string[0] = self.p_char[1]  :  self.p_key[2]] cadd
[ POST LOG self.p_string[0] = self.p_char[1]  :  self.p_value[0]] None
[ POST LOG self.p_string[0] = self.p_char[1]  :  self.p_value[1]] cad
[ POST LOG self.p_string[0] = self.p_char[1]  :  self.p_value[2]] cadd
[ POST LOG self.p_string[0] = self.p_char[1]  :  list(self.p_btree[0].items())] [('ad', 10), ('d', 6)]
[ POST LOG self.p_string[0] = self.p_char[1]  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_string[0] = self.p_char[1]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_key[0]] cad
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_key[1]] d
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_key[2]] cadd
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_value[0]] None
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_value[1]] cad
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_value[2]] cadd
[ LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[0].items())	] [('ad', 10), ('d', 6)]
[ LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_key[0]] cad
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_key[1]] d
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_key[2]] cadd
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_value[0]] None
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_value[1]] cad
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_value[2]] cadd
[ POST LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[0].items())] [('ad', 10), ('d', 6)]
[ POST LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  self.p_key[0]] cad
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  self.p_key[1]] d
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  self.p_key[2]] cadd
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  self.p_value[0]] None
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  self.p_value[1]] cad
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  self.p_value[2]] cadd
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  list(self.p_btree[0].items())	] [('ad', 10), ('d', 6)]
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  self.p_key[0]] cad
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  self.p_key[1]] d
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  self.p_key[2]] cadd
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  self.p_value[0]] None
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  self.p_value[1]] cad
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  list(self.p_btree[0].items())] [('ad', 10), ('d', 'cad')]
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[1]})  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_key[0]] cad
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_key[1]] d
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_key[2]] cadd
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_value[0]] None
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_value[1]] cad
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_value[2]] cadd
[ LOG self.p_value[0] = self.p_string[2]  :  list(self.p_btree[0].items())	] [('ad', 10), ('d', 'cad')]
[ LOG self.p_value[0] = self.p_string[2]  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_value[0] = self.p_string[2]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_key[0]] cad
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_key[1]] d
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_key[2]] cadd
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_value[0]] caddbb
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_value[1]] cad
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_value[2]] cadd
[ POST LOG self.p_value[0] = self.p_string[2]  :  list(self.p_btree[0].items())] [('ad', 10), ('d', 'cad')]
[ POST LOG self.p_value[0] = self.p_string[2]  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_value[0] = self.p_string[2]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6)]
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  self.p_key[0]] cad
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  self.p_key[1]] d
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  self.p_key[2]] cadd
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  self.p_value[0]] caddbb
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  self.p_value[1]] cad
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  self.p_value[2]] cadd
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  list(self.p_btree[0].items())	] [('ad', 10), ('d', 'cad')]
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6)]
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  self.p_key[0]] cad
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  self.p_key[1]] d
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  self.p_key[2]] cadd
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  self.p_value[0]] caddbb
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  self.p_value[1]] cad
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  list(self.p_btree[0].items())] [('ad', 10), ('d', 'cad')]
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[0])  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb')]
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[0]] cad
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[1]] d
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[2]] cadd
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[0]] caddbb
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[1]] cad
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[2]] cadd
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[0].items())	] [('ad', 10), ('d', 'cad')]
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb')]
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[0]] cad
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[1]] d
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[2]] cadd
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[0]] caddbb
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[1]] cad
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[0].items())] [('ad', 10), ('d', 'cad')]
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  self.p_key[0]] cad
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  self.p_key[1]] d
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  self.p_key[2]] cadd
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  self.p_value[0]] caddbb
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  self.p_value[1]] cad
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  self.p_value[2]] cadd
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  list(self.p_btree[0].items())	] [('ad', 10), ('d', 'cad')]
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  self.p_key[0]] cad
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  self.p_key[1]] d
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  self.p_key[2]] cadd
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  self.p_value[0]] caddbb
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  self.p_value[1]] cad
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  list(self.p_btree[0].items())] [('ad', 10), ('d', 'cad')]
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_btree[0].insert(self.p_key[1],self.p_value[1])  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  self.p_key[0]] cad
[ LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  self.p_key[1]] d
[ LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  self.p_key[2]] cadd
[ LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  self.p_value[0]] caddbb
[ LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  self.p_value[1]] cad
[ LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  self.p_value[2]] cadd
[ LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  list(self.p_btree[0].items())	] [('ad', 10), ('d', 'cad')]
[ LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  self.p_key[0]] cad
[ POST LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  self.p_key[1]] d
[ POST LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  self.p_key[2]] cadd
[ POST LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  self.p_value[0]] caddbb
[ POST LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  self.p_value[1]] cad
[ POST LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_btree[0].update({self.p_key[0]:self.p_value[1]})  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_key[0]] cad
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_key[1]] d
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_key[2]] cadd
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_value[0]] caddbb
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_value[1]] cad
[ LOG self.p_string[2] += self.p_char[1]  :  self.p_value[2]] cadd
[ LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('d', 'cad')]
[ LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_key[0]] cad
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_key[1]] d
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_key[2]] cadd
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_value[0]] caddbb
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_value[1]] cad
[ POST LOG self.p_string[2] += self.p_char[1]  :  self.p_value[2]] cadd
[ POST LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_string[2] += self.p_char[1]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  self.p_key[0]] cad
[ LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  self.p_key[1]] d
[ LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  self.p_key[2]] cadd
[ LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  self.p_value[0]] caddbb
[ LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  self.p_value[1]] cad
[ LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  self.p_value[2]] cadd
[ LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('d', 'cad')]
[ LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  self.p_key[0]] cad
[ POST LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  self.p_key[1]] d
[ POST LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  self.p_key[2]] cadd
[ POST LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  self.p_value[0]] caddbb
[ POST LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  self.p_value[1]] cad
[ POST LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ POST LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_btree[0].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_value[1] = self.p_int[1]  :  self.p_key[0]] cad
[ LOG self.p_value[1] = self.p_int[1]  :  self.p_key[1]] d
[ LOG self.p_value[1] = self.p_int[1]  :  self.p_key[2]] cadd
[ LOG self.p_value[1] = self.p_int[1]  :  self.p_value[0]] caddbb
[ LOG self.p_value[1] = self.p_int[1]  :  self.p_value[1]] cad
[ LOG self.p_value[1] = self.p_int[1]  :  self.p_value[2]] cadd
[ LOG self.p_value[1] = self.p_int[1]  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ LOG self.p_value[1] = self.p_int[1]  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_value[1] = self.p_int[1]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_value[1] = self.p_int[1]  :  self.p_key[0]] cad
[ POST LOG self.p_value[1] = self.p_int[1]  :  self.p_key[1]] d
[ POST LOG self.p_value[1] = self.p_int[1]  :  self.p_key[2]] cadd
[ POST LOG self.p_value[1] = self.p_int[1]  :  self.p_value[0]] caddbb
[ POST LOG self.p_value[1] = self.p_int[1]  :  self.p_value[1]] 6
[ POST LOG self.p_value[1] = self.p_int[1]  :  self.p_value[2]] cadd
[ POST LOG self.p_value[1] = self.p_int[1]  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ POST LOG self.p_value[1] = self.p_int[1]  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_value[1] = self.p_int[1]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  self.p_key[0]] cad
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  self.p_key[1]] d
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  self.p_key[2]] cadd
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  self.p_value[0]] caddbb
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  self.p_value[1]] 6
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  self.p_value[2]] cadd
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  self.p_key[0]] cad
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  self.p_key[1]] d
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  self.p_key[2]] cadd
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  self.p_value[0]] caddbb
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  self.p_value[1]] 6
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[0])  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[0]] cad
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[1]] d
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[2]] cadd
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[0]] caddbb
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[1]] 6
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[2]] cadd
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('d', 'cad')]
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[0]] cad
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[1]] d
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[2]] cadd
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[0]] caddbb
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[1]] 6
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_value[0] = self.p_int[0]  :  self.p_key[0]] cad
[ LOG self.p_value[0] = self.p_int[0]  :  self.p_key[1]] d
[ LOG self.p_value[0] = self.p_int[0]  :  self.p_key[2]] cadd
[ LOG self.p_value[0] = self.p_int[0]  :  self.p_value[0]] caddbb
[ LOG self.p_value[0] = self.p_int[0]  :  self.p_value[1]] 6
[ LOG self.p_value[0] = self.p_int[0]  :  self.p_value[2]] cadd
[ LOG self.p_value[0] = self.p_int[0]  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ LOG self.p_value[0] = self.p_int[0]  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_value[0] = self.p_int[0]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_value[0] = self.p_int[0]  :  self.p_key[0]] cad
[ POST LOG self.p_value[0] = self.p_int[0]  :  self.p_key[1]] d
[ POST LOG self.p_value[0] = self.p_int[0]  :  self.p_key[2]] cadd
[ POST LOG self.p_value[0] = self.p_int[0]  :  self.p_value[0]] 4
[ POST LOG self.p_value[0] = self.p_int[0]  :  self.p_value[1]] 6
[ POST LOG self.p_value[0] = self.p_int[0]  :  self.p_value[2]] cadd
[ POST LOG self.p_value[0] = self.p_int[0]  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ POST LOG self.p_value[0] = self.p_int[0]  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_value[0] = self.p_int[0]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_int[0] = 6  :  self.p_key[0]] cad
[ LOG self.p_int[0] = 6  :  self.p_key[1]] d
[ LOG self.p_int[0] = 6  :  self.p_key[2]] cadd
[ LOG self.p_int[0] = 6  :  self.p_value[0]] 4
[ LOG self.p_int[0] = 6  :  self.p_value[1]] 6
[ LOG self.p_int[0] = 6  :  self.p_value[2]] cadd
[ LOG self.p_int[0] = 6  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ LOG self.p_int[0] = 6  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_int[0] = 6  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_int[0] = 6  :  self.p_key[0]] cad
[ POST LOG self.p_int[0] = 6  :  self.p_key[1]] d
[ POST LOG self.p_int[0] = 6  :  self.p_key[2]] cadd
[ POST LOG self.p_int[0] = 6  :  self.p_value[0]] 4
[ POST LOG self.p_int[0] = 6  :  self.p_value[1]] 6
[ POST LOG self.p_int[0] = 6  :  self.p_value[2]] cadd
[ POST LOG self.p_int[0] = 6  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ POST LOG self.p_int[0] = 6  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_int[0] = 6  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_key[0]] cad
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_key[1]] d
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_key[2]] cadd
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_value[0]] 4
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_value[1]] 6
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_value[2]] cadd
[ LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_key[0]] cad
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_key[1]] d
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_key[2]] cadd
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_value[0]] 4
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_value[1]] 6
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_value[2]] cadd
[ POST LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ POST LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  self.p_key[0]] cad
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  self.p_key[1]] d
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  self.p_key[2]] cadd
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  self.p_value[0]] 4
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  self.p_value[1]] 6
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  self.p_value[2]] cadd
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  self.p_key[0]] cad
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  self.p_key[1]] d
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  self.p_key[2]] cadd
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  self.p_value[0]] 4
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  self.p_value[1]] 6
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[2]})  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[0]] cad
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[1]] d
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[2]] cadd
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[0]] 4
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[1]] 6
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[2]] cadd
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 'cadd'), ('d', 'cad')]
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[0]] cad
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[1]] d
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[2]] cadd
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[0]] 4
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[1]] 6
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 'cad')]
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  self.p_key[0]] cad
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  self.p_key[1]] d
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  self.p_key[2]] cadd
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  self.p_value[0]] 4
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  self.p_value[1]] 6
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  self.p_value[2]] cadd
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 'cad')]
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  self.p_key[0]] cad
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  self.p_key[1]] d
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  self.p_key[2]] cadd
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  self.p_value[0]] 4
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  self.p_value[1]] 6
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_btree[0].update({self.p_key[1]:self.p_value[0]})  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_int[1] = 8  :  self.p_key[0]] cad
[ LOG self.p_int[1] = 8  :  self.p_key[1]] d
[ LOG self.p_int[1] = 8  :  self.p_key[2]] cadd
[ LOG self.p_int[1] = 8  :  self.p_value[0]] 4
[ LOG self.p_int[1] = 8  :  self.p_value[1]] 6
[ LOG self.p_int[1] = 8  :  self.p_value[2]] cadd
[ LOG self.p_int[1] = 8  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_int[1] = 8  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_int[1] = 8  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_int[1] = 8  :  self.p_key[0]] cad
[ POST LOG self.p_int[1] = 8  :  self.p_key[1]] d
[ POST LOG self.p_int[1] = 8  :  self.p_key[2]] cadd
[ POST LOG self.p_int[1] = 8  :  self.p_value[0]] 4
[ POST LOG self.p_int[1] = 8  :  self.p_value[1]] 6
[ POST LOG self.p_int[1] = 8  :  self.p_value[2]] cadd
[ POST LOG self.p_int[1] = 8  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_int[1] = 8  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_int[1] = 8  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_key[2] = self.p_int[0]  :  self.p_key[0]] cad
[ LOG self.p_key[2] = self.p_int[0]  :  self.p_key[1]] d
[ LOG self.p_key[2] = self.p_int[0]  :  self.p_key[2]] cadd
[ LOG self.p_key[2] = self.p_int[0]  :  self.p_value[0]] 4
[ LOG self.p_key[2] = self.p_int[0]  :  self.p_value[1]] 6
[ LOG self.p_key[2] = self.p_int[0]  :  self.p_value[2]] cadd
[ LOG self.p_key[2] = self.p_int[0]  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_key[2] = self.p_int[0]  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_key[2] = self.p_int[0]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_key[2] = self.p_int[0]  :  self.p_key[0]] cad
[ POST LOG self.p_key[2] = self.p_int[0]  :  self.p_key[1]] d
[ POST LOG self.p_key[2] = self.p_int[0]  :  self.p_key[2]] 6
[ POST LOG self.p_key[2] = self.p_int[0]  :  self.p_value[0]] 4
[ POST LOG self.p_key[2] = self.p_int[0]  :  self.p_value[1]] 6
[ POST LOG self.p_key[2] = self.p_int[0]  :  self.p_value[2]] cadd
[ POST LOG self.p_key[2] = self.p_int[0]  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_key[2] = self.p_int[0]  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_key[2] = self.p_int[0]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_key[0] = self.p_int[1]  :  self.p_key[0]] cad
[ LOG self.p_key[0] = self.p_int[1]  :  self.p_key[1]] d
[ LOG self.p_key[0] = self.p_int[1]  :  self.p_key[2]] 6
[ LOG self.p_key[0] = self.p_int[1]  :  self.p_value[0]] 4
[ LOG self.p_key[0] = self.p_int[1]  :  self.p_value[1]] 6
[ LOG self.p_key[0] = self.p_int[1]  :  self.p_value[2]] cadd
[ LOG self.p_key[0] = self.p_int[1]  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_key[0] = self.p_int[1]  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_key[0] = self.p_int[1]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_key[0] = self.p_int[1]  :  self.p_key[0]] 8
[ POST LOG self.p_key[0] = self.p_int[1]  :  self.p_key[1]] d
[ POST LOG self.p_key[0] = self.p_int[1]  :  self.p_key[2]] 6
[ POST LOG self.p_key[0] = self.p_int[1]  :  self.p_value[0]] 4
[ POST LOG self.p_key[0] = self.p_int[1]  :  self.p_value[1]] 6
[ POST LOG self.p_key[0] = self.p_int[1]  :  self.p_value[2]] cadd
[ POST LOG self.p_key[0] = self.p_int[1]  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_key[0] = self.p_int[1]  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_key[0] = self.p_int[1]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_int[0] = 5  :  self.p_key[0]] 8
[ LOG self.p_int[0] = 5  :  self.p_key[1]] d
[ LOG self.p_int[0] = 5  :  self.p_key[2]] 6
[ LOG self.p_int[0] = 5  :  self.p_value[0]] 4
[ LOG self.p_int[0] = 5  :  self.p_value[1]] 6
[ LOG self.p_int[0] = 5  :  self.p_value[2]] cadd
[ LOG self.p_int[0] = 5  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_int[0] = 5  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_int[0] = 5  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_int[0] = 5  :  self.p_key[0]] 8
[ POST LOG self.p_int[0] = 5  :  self.p_key[1]] d
[ POST LOG self.p_int[0] = 5  :  self.p_key[2]] 6
[ POST LOG self.p_int[0] = 5  :  self.p_value[0]] 4
[ POST LOG self.p_int[0] = 5  :  self.p_value[1]] 6
[ POST LOG self.p_int[0] = 5  :  self.p_value[2]] cadd
[ POST LOG self.p_int[0] = 5  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_int[0] = 5  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_int[0] = 5  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_key[0]] 8
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_key[1]] d
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_key[2]] 6
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_value[0]] 4
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_value[1]] 6
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_value[2]] cadd
[ LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_key[0]] 8
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_key[1]] d
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_key[2]] 6
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_value[0]] 8
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_value[1]] 6
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_value[2]] cadd
[ POST LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_value[1] = self.p_string[2]  :  self.p_key[0]] 8
[ LOG self.p_value[1] = self.p_string[2]  :  self.p_key[1]] d
[ LOG self.p_value[1] = self.p_string[2]  :  self.p_key[2]] 6
[ LOG self.p_value[1] = self.p_string[2]  :  self.p_value[0]] 8
[ LOG self.p_value[1] = self.p_string[2]  :  self.p_value[1]] 6
[ LOG self.p_value[1] = self.p_string[2]  :  self.p_value[2]] cadd
[ LOG self.p_value[1] = self.p_string[2]  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_value[1] = self.p_string[2]  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_value[1] = self.p_string[2]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_value[1] = self.p_string[2]  :  self.p_key[0]] 8
[ POST LOG self.p_value[1] = self.p_string[2]  :  self.p_key[1]] d
[ POST LOG self.p_value[1] = self.p_string[2]  :  self.p_key[2]] 6
[ POST LOG self.p_value[1] = self.p_string[2]  :  self.p_value[0]] 8
[ POST LOG self.p_value[1] = self.p_string[2]  :  self.p_value[1]] caddbbb
[ POST LOG self.p_value[1] = self.p_string[2]  :  self.p_value[2]] cadd
[ POST LOG self.p_value[1] = self.p_string[2]  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_value[1] = self.p_string[2]  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_value[1] = self.p_string[2]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_int[1] = 3  :  self.p_key[0]] 8
[ LOG self.p_int[1] = 3  :  self.p_key[1]] d
[ LOG self.p_int[1] = 3  :  self.p_key[2]] 6
[ LOG self.p_int[1] = 3  :  self.p_value[0]] 8
[ LOG self.p_int[1] = 3  :  self.p_value[1]] caddbbb
[ LOG self.p_int[1] = 3  :  self.p_value[2]] cadd
[ LOG self.p_int[1] = 3  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_int[1] = 3  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_int[1] = 3  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_int[1] = 3  :  self.p_key[0]] 8
[ POST LOG self.p_int[1] = 3  :  self.p_key[1]] d
[ POST LOG self.p_int[1] = 3  :  self.p_key[2]] 6
[ POST LOG self.p_int[1] = 3  :  self.p_value[0]] 8
[ POST LOG self.p_int[1] = 3  :  self.p_value[1]] caddbbb
[ POST LOG self.p_int[1] = 3  :  self.p_value[2]] cadd
[ POST LOG self.p_int[1] = 3  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_int[1] = 3  :  list(self.p_btree[1].items())] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_int[1] = 3  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[0]] 8
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[1]] d
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[2]] 6
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[0]] 8
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[1]] caddbbb
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[2]] cadd
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[1].items())	] [(8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[0]] 8
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[1]] d
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[2]] 6
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[0]] 8
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[1]] caddbbb
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[1].items())] [(6, 8), (8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_char[2] ="a"  :  self.p_key[0]] 8
[ LOG self.p_char[2] ="a"  :  self.p_key[1]] d
[ LOG self.p_char[2] ="a"  :  self.p_key[2]] 6
[ LOG self.p_char[2] ="a"  :  self.p_value[0]] 8
[ LOG self.p_char[2] ="a"  :  self.p_value[1]] caddbbb
[ LOG self.p_char[2] ="a"  :  self.p_value[2]] cadd
[ LOG self.p_char[2] ="a"  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_char[2] ="a"  :  list(self.p_btree[1].items())	] [(6, 8), (8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_char[2] ="a"  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_char[2] ="a"  :  self.p_key[0]] 8
[ POST LOG self.p_char[2] ="a"  :  self.p_key[1]] d
[ POST LOG self.p_char[2] ="a"  :  self.p_key[2]] 6
[ POST LOG self.p_char[2] ="a"  :  self.p_value[0]] 8
[ POST LOG self.p_char[2] ="a"  :  self.p_value[1]] caddbbb
[ POST LOG self.p_char[2] ="a"  :  self.p_value[2]] cadd
[ POST LOG self.p_char[2] ="a"  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_char[2] ="a"  :  list(self.p_btree[1].items())] [(6, 8), (8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_char[2] ="a"  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_key[0]] 8
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_key[1]] d
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_key[2]] 6
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_value[0]] 8
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_value[1]] caddbbb
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_value[2]] cadd
[ LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[1].items())	] [(6, 8), (8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_key[0]] 8
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_key[1]] d
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_key[2]] 6
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_value[0]] 3
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_value[1]] caddbbb
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_value[2]] cadd
[ POST LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[1].items())] [(6, 8), (8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[0]] 8
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[1]] d
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[2]] 6
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[0]] 3
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[1]] caddbbb
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[2]] cadd
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[1].items())	] [(6, 8), (8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[0]] 8
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[1]] d
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[2]] 6
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[0]] 3
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[1]] caddbbb
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[0].items())] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[1].items())] [(6, 8), (8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[2].items())] [(6, 'cadd'), ('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[0]] 8
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[1]] d
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[2]] 6
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[0]] 3
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[1]] caddbbb
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[2]] cadd
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[0].items())	] [('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[1].items())	] [(6, 8), (8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[2].items())	] [(6, 'cadd'), ('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[0]] 8
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[1]] d
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[2]] 6
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[0]] 3
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[1]] caddbbb
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[0].items())] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[1].items())] [(6, 8), (8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_btree[0].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[2].items())] [(6, 'cadd'), ('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[0]] 8
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[1]] d
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[2]] 6
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[0]] 3
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[1]] caddbbb
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[2]] cadd
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[0].items())	] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[1].items())	] [(6, 8), (8, 6), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[2].items())	] [(6, 'cadd'), ('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[0]] 8
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[1]] d
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[2]] 6
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[0]] 3
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[1]] caddbbb
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[0].items())] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[1].items())] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[2].items())] [(6, 'cadd'), ('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[0]] 8
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[1]] d
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[2]] 6
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[0]] 3
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[1]] caddbbb
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[2]] cadd
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[0].items())	] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[1].items())	] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[2].items())	] [(6, 'cadd'), ('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[0]] 8
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[1]] d
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[2]] 6
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[0]] 3
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[1]] caddbbb
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[0].items())] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[1].items())] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[2].items())] [(6, 'cadd'), ('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_int[1] = 3  :  self.p_key[0]] 8
[ LOG self.p_int[1] = 3  :  self.p_key[1]] d
[ LOG self.p_int[1] = 3  :  self.p_key[2]] 6
[ LOG self.p_int[1] = 3  :  self.p_value[0]] 3
[ LOG self.p_int[1] = 3  :  self.p_value[1]] caddbbb
[ LOG self.p_int[1] = 3  :  self.p_value[2]] cadd
[ LOG self.p_int[1] = 3  :  list(self.p_btree[0].items())	] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_int[1] = 3  :  list(self.p_btree[1].items())	] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_int[1] = 3  :  list(self.p_btree[2].items())	] [(6, 'cadd'), ('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_int[1] = 3  :  self.p_key[0]] 8
[ POST LOG self.p_int[1] = 3  :  self.p_key[1]] d
[ POST LOG self.p_int[1] = 3  :  self.p_key[2]] 6
[ POST LOG self.p_int[1] = 3  :  self.p_value[0]] 3
[ POST LOG self.p_int[1] = 3  :  self.p_value[1]] caddbbb
[ POST LOG self.p_int[1] = 3  :  self.p_value[2]] cadd
[ POST LOG self.p_int[1] = 3  :  list(self.p_btree[0].items())] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_int[1] = 3  :  list(self.p_btree[1].items())] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_int[1] = 3  :  list(self.p_btree[2].items())] [(6, 'cadd'), ('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_btree[2].pop(self.p_key[2],0)  :  self.p_key[0]] 8
[ LOG self.p_btree[2].pop(self.p_key[2],0)  :  self.p_key[1]] d
[ LOG self.p_btree[2].pop(self.p_key[2],0)  :  self.p_key[2]] 6
[ LOG self.p_btree[2].pop(self.p_key[2],0)  :  self.p_value[0]] 3
[ LOG self.p_btree[2].pop(self.p_key[2],0)  :  self.p_value[1]] caddbbb
[ LOG self.p_btree[2].pop(self.p_key[2],0)  :  self.p_value[2]] cadd
[ LOG self.p_btree[2].pop(self.p_key[2],0)  :  list(self.p_btree[0].items())	] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_btree[2].pop(self.p_key[2],0)  :  list(self.p_btree[1].items())	] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_btree[2].pop(self.p_key[2],0)  :  list(self.p_btree[2].items())	] [(6, 'cadd'), ('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_btree[2].pop(self.p_key[2],0)  :  self.p_key[0]] 8
[ POST LOG self.p_btree[2].pop(self.p_key[2],0)  :  self.p_key[1]] d
[ POST LOG self.p_btree[2].pop(self.p_key[2],0)  :  self.p_key[2]] 6
[ POST LOG self.p_btree[2].pop(self.p_key[2],0)  :  self.p_value[0]] 3
[ POST LOG self.p_btree[2].pop(self.p_key[2],0)  :  self.p_value[1]] caddbbb
[ POST LOG self.p_btree[2].pop(self.p_key[2],0)  :  self.p_value[2]] cadd
[ POST LOG self.p_btree[2].pop(self.p_key[2],0)  :  list(self.p_btree[0].items())] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_btree[2].pop(self.p_key[2],0)  :  list(self.p_btree[1].items())] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_btree[2].pop(self.p_key[2],0)  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_key[0]] 8
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_key[1]] d
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_key[2]] 6
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_value[0]] 3
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_value[1]] caddbbb
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_value[2]] cadd
[ LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[0].items())	] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[1].items())	] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_key[0]] 8
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_key[1]] d
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_key[2]] 6
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_value[0]] 3
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_value[1]] caddbbb
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_value[2]] cadd
[ POST LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[0].items())] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[1].items())] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_key[0]] 8
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_key[1]] d
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_key[2]] 6
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_value[0]] 3
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_value[1]] caddbbb
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_value[2]] cadd
[ LOG self.p_key[1] = self.p_int[0]  :  list(self.p_btree[0].items())	] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_key[1] = self.p_int[0]  :  list(self.p_btree[1].items())	] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_key[1] = self.p_int[0]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_key[0]] 8
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_key[1]] 5
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_key[2]] 6
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_value[0]] 3
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_value[1]] caddbbb
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_value[2]] cadd
[ POST LOG self.p_key[1] = self.p_int[0]  :  list(self.p_btree[0].items())] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_key[1] = self.p_int[0]  :  list(self.p_btree[1].items())] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_key[1] = self.p_int[0]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_key[0]] 8
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_key[1]] 5
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_key[2]] 6
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_value[0]] 3
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_value[1]] caddbbb
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_value[2]] cadd
[ LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[0].items())	] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[1].items())	] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_key[0]] 8
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_key[1]] 5
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_key[2]] 6
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_value[0]] 3
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_value[1]] caddbbb
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_value[2]] cadd
[ POST LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[0].items())] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[1].items())] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_key[0]] 8
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_key[1]] 5
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_key[2]] 6
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_value[0]] 3
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_value[1]] caddbbb
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_value[2]] cadd
[ LOG self.p_key[2] = self.p_string[1]  :  list(self.p_btree[0].items())	] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_key[2] = self.p_string[1]  :  list(self.p_btree[1].items())	] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_key[2] = self.p_string[1]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_key[0]] 8
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_key[1]] 5
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_key[2]] d
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_value[0]] 3
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_value[1]] caddbbb
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_value[2]] cadd
[ POST LOG self.p_key[2] = self.p_string[1]  :  list(self.p_btree[0].items())] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_key[2] = self.p_string[1]  :  list(self.p_btree[1].items())] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_key[2] = self.p_string[1]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_key[0]] 8
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_key[1]] 5
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_key[2]] d
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_value[0]] 3
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_value[1]] caddbbb
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_value[2]] cadd
[ LOG self.p_value[2] = self.p_string[2]  :  list(self.p_btree[0].items())	] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_value[2] = self.p_string[2]  :  list(self.p_btree[1].items())	] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_value[2] = self.p_string[2]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_key[0]] 8
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_key[1]] 5
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_key[2]] d
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_value[0]] 3
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_value[1]] caddbbb
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_value[2]] caddbbba
[ POST LOG self.p_value[2] = self.p_string[2]  :  list(self.p_btree[0].items())] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_value[2] = self.p_string[2]  :  list(self.p_btree[1].items())] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_value[2] = self.p_string[2]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_string[0] += self.p_char[1]  :  self.p_key[0]] 8
[ LOG self.p_string[0] += self.p_char[1]  :  self.p_key[1]] 5
[ LOG self.p_string[0] += self.p_char[1]  :  self.p_key[2]] d
[ LOG self.p_string[0] += self.p_char[1]  :  self.p_value[0]] 3
[ LOG self.p_string[0] += self.p_char[1]  :  self.p_value[1]] caddbbb
[ LOG self.p_string[0] += self.p_char[1]  :  self.p_value[2]] caddbbba
[ LOG self.p_string[0] += self.p_char[1]  :  list(self.p_btree[0].items())	] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_string[0] += self.p_char[1]  :  list(self.p_btree[1].items())	] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_string[0] += self.p_char[1]  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_string[0] += self.p_char[1]  :  self.p_key[0]] 8
[ POST LOG self.p_string[0] += self.p_char[1]  :  self.p_key[1]] 5
[ POST LOG self.p_string[0] += self.p_char[1]  :  self.p_key[2]] d
[ POST LOG self.p_string[0] += self.p_char[1]  :  self.p_value[0]] 3
[ POST LOG self.p_string[0] += self.p_char[1]  :  self.p_value[1]] caddbbb
[ POST LOG self.p_string[0] += self.p_char[1]  :  self.p_value[2]] caddbbba
[ POST LOG self.p_string[0] += self.p_char[1]  :  list(self.p_btree[0].items())] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_string[0] += self.p_char[1]  :  list(self.p_btree[1].items())] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_string[0] += self.p_char[1]  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  self.p_key[0]] 8
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  self.p_key[1]] 5
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  self.p_key[2]] d
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  self.p_value[0]] 3
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  self.p_value[1]] caddbbb
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  self.p_value[2]] caddbbba
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  list(self.p_btree[0].items())	] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  list(self.p_btree[1].items())	] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  list(self.p_btree[2].items())	] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  self.p_key[0]] 8
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  self.p_key[1]] 5
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  self.p_key[2]] d
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  self.p_value[0]] 3
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  self.p_value[1]] caddbbb
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  self.p_value[2]] caddbbba
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  list(self.p_btree[0].items())] [(6, 3), ('ad', 10), ('cad', 'cad'), ('cadd', 6), ('d', 4)]
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  list(self.p_btree[1].items())] [(6, 8), (8, 3), ('ad', 'cad'), ('cad', 'caddbb'), ('d', 'cad')]
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[1])  :  list(self.p_btree[2].items())] [('a', 6), ('ad', 6), ('cad', 'caddbb'), ('cadd', 'cad')]
[ LOG self.p_int[0] = 1  :  self.p_key[0]] None
[ LOG self.p_int[0] = 1  :  self.p_key[1]] None
[ LOG self.p_int[0] = 1  :  self.p_key[2]] None
[ LOG self.p_int[0] = 1  :  self.p_value[0]] None
[ LOG self.p_int[0] = 1  :  self.p_value[1]] None
[ LOG self.p_int[0] = 1  :  self.p_value[2]] None
[ POST LOG self.p_int[0] = 1  :  self.p_key[0]] None
[ POST LOG self.p_int[0] = 1  :  self.p_key[1]] None
[ POST LOG self.p_int[0] = 1  :  self.p_key[2]] None
[ POST LOG self.p_int[0] = 1  :  self.p_value[0]] None
[ POST LOG self.p_int[0] = 1  :  self.p_value[1]] None
[ POST LOG self.p_int[0] = 1  :  self.p_value[2]] None
[ LOG self.p_char[0] ="a"  :  self.p_key[0]] None
[ LOG self.p_char[0] ="a"  :  self.p_key[1]] None
[ LOG self.p_char[0] ="a"  :  self.p_key[2]] None
[ LOG self.p_char[0] ="a"  :  self.p_value[0]] None
[ LOG self.p_char[0] ="a"  :  self.p_value[1]] None
[ LOG self.p_char[0] ="a"  :  self.p_value[2]] None
[ POST LOG self.p_char[0] ="a"  :  self.p_key[0]] None
[ POST LOG self.p_char[0] ="a"  :  self.p_key[1]] None
[ POST LOG self.p_char[0] ="a"  :  self.p_key[2]] None
[ POST LOG self.p_char[0] ="a"  :  self.p_value[0]] None
[ POST LOG self.p_char[0] ="a"  :  self.p_value[1]] None
[ POST LOG self.p_char[0] ="a"  :  self.p_value[2]] None
[ LOG self.p_string[2] = self.p_char[0]  :  self.p_key[0]] None
[ LOG self.p_string[2] = self.p_char[0]  :  self.p_key[1]] None
[ LOG self.p_string[2] = self.p_char[0]  :  self.p_key[2]] None
[ LOG self.p_string[2] = self.p_char[0]  :  self.p_value[0]] None
[ LOG self.p_string[2] = self.p_char[0]  :  self.p_value[1]] None
[ LOG self.p_string[2] = self.p_char[0]  :  self.p_value[2]] None
[ POST LOG self.p_string[2] = self.p_char[0]  :  self.p_key[0]] None
[ POST LOG self.p_string[2] = self.p_char[0]  :  self.p_key[1]] None
[ POST LOG self.p_string[2] = self.p_char[0]  :  self.p_key[2]] None
[ POST LOG self.p_string[2] = self.p_char[0]  :  self.p_value[0]] None
[ POST LOG self.p_string[2] = self.p_char[0]  :  self.p_value[1]] None
[ POST LOG self.p_string[2] = self.p_char[0]  :  self.p_value[2]] None
[ LOG self.p_int[1] = 3  :  self.p_key[0]] None
[ LOG self.p_int[1] = 3  :  self.p_key[1]] None
[ LOG self.p_int[1] = 3  :  self.p_key[2]] None
[ LOG self.p_int[1] = 3  :  self.p_value[0]] None
[ LOG self.p_int[1] = 3  :  self.p_value[1]] None
[ LOG self.p_int[1] = 3  :  self.p_value[2]] None
[ POST LOG self.p_int[1] = 3  :  self.p_key[0]] None
[ POST LOG self.p_int[1] = 3  :  self.p_key[1]] None
[ POST LOG self.p_int[1] = 3  :  self.p_key[2]] None
[ POST LOG self.p_int[1] = 3  :  self.p_value[0]] None
[ POST LOG self.p_int[1] = 3  :  self.p_value[1]] None
[ POST LOG self.p_int[1] = 3  :  self.p_value[2]] None
[ LOG self.p_int[2] = 7  :  self.p_key[0]] None
[ LOG self.p_int[2] = 7  :  self.p_key[1]] None
[ LOG self.p_int[2] = 7  :  self.p_key[2]] None
[ LOG self.p_int[2] = 7  :  self.p_value[0]] None
[ LOG self.p_int[2] = 7  :  self.p_value[1]] None
[ LOG self.p_int[2] = 7  :  self.p_value[2]] None
[ POST LOG self.p_int[2] = 7  :  self.p_key[0]] None
[ POST LOG self.p_int[2] = 7  :  self.p_key[1]] None
[ POST LOG self.p_int[2] = 7  :  self.p_key[2]] None
[ POST LOG self.p_int[2] = 7  :  self.p_value[0]] None
[ POST LOG self.p_int[2] = 7  :  self.p_value[1]] None
[ POST LOG self.p_int[2] = 7  :  self.p_value[2]] None
[ LOG self.p_key[0] = self.p_string[2]  :  self.p_key[0]] None
[ LOG self.p_key[0] = self.p_string[2]  :  self.p_key[1]] None
[ LOG self.p_key[0] = self.p_string[2]  :  self.p_key[2]] None
[ LOG self.p_key[0] = self.p_string[2]  :  self.p_value[0]] None
[ LOG self.p_key[0] = self.p_string[2]  :  self.p_value[1]] None
[ LOG self.p_key[0] = self.p_string[2]  :  self.p_value[2]] None
[ POST LOG self.p_key[0] = self.p_string[2]  :  self.p_key[0]] a
[ POST LOG self.p_key[0] = self.p_string[2]  :  self.p_key[1]] None
[ POST LOG self.p_key[0] = self.p_string[2]  :  self.p_key[2]] None
[ POST LOG self.p_key[0] = self.p_string[2]  :  self.p_value[0]] None
[ POST LOG self.p_key[0] = self.p_string[2]  :  self.p_value[1]] None
[ POST LOG self.p_key[0] = self.p_string[2]  :  self.p_value[2]] None
[ LOG self.p_char[2] ="c"  :  self.p_key[0]] a
[ LOG self.p_char[2] ="c"  :  self.p_key[1]] None
[ LOG self.p_char[2] ="c"  :  self.p_key[2]] None
[ LOG self.p_char[2] ="c"  :  self.p_value[0]] None
[ LOG self.p_char[2] ="c"  :  self.p_value[1]] None
[ LOG self.p_char[2] ="c"  :  self.p_value[2]] None
[ POST LOG self.p_char[2] ="c"  :  self.p_key[0]] a
[ POST LOG self.p_char[2] ="c"  :  self.p_key[1]] None
[ POST LOG self.p_char[2] ="c"  :  self.p_key[2]] None
[ POST LOG self.p_char[2] ="c"  :  self.p_value[0]] None
[ POST LOG self.p_char[2] ="c"  :  self.p_value[1]] None
[ POST LOG self.p_char[2] ="c"  :  self.p_value[2]] None
[ LOG self.p_char[1] ="b"  :  self.p_key[0]] a
[ LOG self.p_char[1] ="b"  :  self.p_key[1]] None
[ LOG self.p_char[1] ="b"  :  self.p_key[2]] None
[ LOG self.p_char[1] ="b"  :  self.p_value[0]] None
[ LOG self.p_char[1] ="b"  :  self.p_value[1]] None
[ LOG self.p_char[1] ="b"  :  self.p_value[2]] None
[ POST LOG self.p_char[1] ="b"  :  self.p_key[0]] a
[ POST LOG self.p_char[1] ="b"  :  self.p_key[1]] None
[ POST LOG self.p_char[1] ="b"  :  self.p_key[2]] None
[ POST LOG self.p_char[1] ="b"  :  self.p_value[0]] None
[ POST LOG self.p_char[1] ="b"  :  self.p_value[1]] None
[ POST LOG self.p_char[1] ="b"  :  self.p_value[2]] None
[ LOG self.p_key[1] = self.p_string[2]  :  self.p_key[0]] a
[ LOG self.p_key[1] = self.p_string[2]  :  self.p_key[1]] None
[ LOG self.p_key[1] = self.p_string[2]  :  self.p_key[2]] None
[ LOG self.p_key[1] = self.p_string[2]  :  self.p_value[0]] None
[ LOG self.p_key[1] = self.p_string[2]  :  self.p_value[1]] None
[ LOG self.p_key[1] = self.p_string[2]  :  self.p_value[2]] None
[ POST LOG self.p_key[1] = self.p_string[2]  :  self.p_key[0]] a
[ POST LOG self.p_key[1] = self.p_string[2]  :  self.p_key[1]] a
[ POST LOG self.p_key[1] = self.p_string[2]  :  self.p_key[2]] None
[ POST LOG self.p_key[1] = self.p_string[2]  :  self.p_value[0]] None
[ POST LOG self.p_key[1] = self.p_string[2]  :  self.p_value[1]] None
[ POST LOG self.p_key[1] = self.p_string[2]  :  self.p_value[2]] None
[ LOG self.p_value[1] = self.p_int[0]  :  self.p_key[0]] a
[ LOG self.p_value[1] = self.p_int[0]  :  self.p_key[1]] a
[ LOG self.p_value[1] = self.p_int[0]  :  self.p_key[2]] None
[ LOG self.p_value[1] = self.p_int[0]  :  self.p_value[0]] None
[ LOG self.p_value[1] = self.p_int[0]  :  self.p_value[1]] None
[ LOG self.p_value[1] = self.p_int[0]  :  self.p_value[2]] None
[ POST LOG self.p_value[1] = self.p_int[0]  :  self.p_key[0]] a
[ POST LOG self.p_value[1] = self.p_int[0]  :  self.p_key[1]] a
[ POST LOG self.p_value[1] = self.p_int[0]  :  self.p_key[2]] None
[ POST LOG self.p_value[1] = self.p_int[0]  :  self.p_value[0]] None
[ POST LOG self.p_value[1] = self.p_int[0]  :  self.p_value[1]] 1
[ POST LOG self.p_value[1] = self.p_int[0]  :  self.p_value[2]] None
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_key[0]] a
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_key[1]] a
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_key[2]] None
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_value[0]] None
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_value[1]] 1
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_value[2]] None
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_key[0]] a
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_key[1]] a
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_key[2]] None
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_value[0]] None
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_value[1]] 1
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_value[2]] a
[ LOG self.p_int[0] = 2  :  self.p_key[0]] a
[ LOG self.p_int[0] = 2  :  self.p_key[1]] a
[ LOG self.p_int[0] = 2  :  self.p_key[2]] None
[ LOG self.p_int[0] = 2  :  self.p_value[0]] None
[ LOG self.p_int[0] = 2  :  self.p_value[1]] 1
[ LOG self.p_int[0] = 2  :  self.p_value[2]] a
[ POST LOG self.p_int[0] = 2  :  self.p_key[0]] a
[ POST LOG self.p_int[0] = 2  :  self.p_key[1]] a
[ POST LOG self.p_int[0] = 2  :  self.p_key[2]] None
[ POST LOG self.p_int[0] = 2  :  self.p_value[0]] None
[ POST LOG self.p_int[0] = 2  :  self.p_value[1]] 1
[ POST LOG self.p_int[0] = 2  :  self.p_value[2]] a
[ LOG self.p_btree[1] = OOBTree()  :  self.p_key[0]] a
[ LOG self.p_btree[1] = OOBTree()  :  self.p_key[1]] a
[ LOG self.p_btree[1] = OOBTree()  :  self.p_key[2]] None
[ LOG self.p_btree[1] = OOBTree()  :  self.p_value[0]] None
[ LOG self.p_btree[1] = OOBTree()  :  self.p_value[1]] 1
[ LOG self.p_btree[1] = OOBTree()  :  self.p_value[2]] a
[ POST LOG self.p_btree[1] = OOBTree()  :  self.p_key[0]] a
[ POST LOG self.p_btree[1] = OOBTree()  :  self.p_key[1]] a
[ POST LOG self.p_btree[1] = OOBTree()  :  self.p_key[2]] None
[ POST LOG self.p_btree[1] = OOBTree()  :  self.p_value[0]] None
[ POST LOG self.p_btree[1] = OOBTree()  :  self.p_value[1]] 1
[ POST LOG self.p_btree[1] = OOBTree()  :  self.p_value[2]] a
[ POST LOG self.p_btree[1] = OOBTree()  :  list(self.p_btree[1].items())] []
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_key[0]] a
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_key[1]] a
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_key[2]] None
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_value[0]] None
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_value[1]] 1
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_value[2]] a
[ LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[1].items())	] []
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_key[0]] a
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_key[1]] a
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_key[2]] None
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_value[0]] None
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_value[1]] 1
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_value[2]] a
[ POST LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[1].items())] []
[ LOG self.p_char[0] ="a"  :  self.p_key[0]] a
[ LOG self.p_char[0] ="a"  :  self.p_key[1]] a
[ LOG self.p_char[0] ="a"  :  self.p_key[2]] None
[ LOG self.p_char[0] ="a"  :  self.p_value[0]] None
[ LOG self.p_char[0] ="a"  :  self.p_value[1]] 1
[ LOG self.p_char[0] ="a"  :  self.p_value[2]] a
[ LOG self.p_char[0] ="a"  :  list(self.p_btree[1].items())	] []
[ POST LOG self.p_char[0] ="a"  :  self.p_key[0]] a
[ POST LOG self.p_char[0] ="a"  :  self.p_key[1]] a
[ POST LOG self.p_char[0] ="a"  :  self.p_key[2]] None
[ POST LOG self.p_char[0] ="a"  :  self.p_value[0]] None
[ POST LOG self.p_char[0] ="a"  :  self.p_value[1]] 1
[ POST LOG self.p_char[0] ="a"  :  self.p_value[2]] a
[ POST LOG self.p_char[0] ="a"  :  list(self.p_btree[1].items())] []
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_key[0]] a
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_key[1]] a
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_key[2]] None
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_value[0]] None
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_value[1]] 1
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_value[2]] a
[ LOG self.p_value[0] = self.p_string[2]  :  list(self.p_btree[1].items())	] []
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_key[0]] a
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_key[1]] a
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_key[2]] None
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_value[0]] ac
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_value[1]] 1
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_value[2]] a
[ POST LOG self.p_value[0] = self.p_string[2]  :  list(self.p_btree[1].items())] []
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_key[0]] a
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_key[1]] a
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_key[2]] None
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_value[0]] ac
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_value[1]] 1
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_value[2]] a
[ LOG self.p_string[1] = self.p_char[2]  :  list(self.p_btree[1].items())	] []
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_key[0]] a
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_key[1]] a
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_key[2]] None
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_value[0]] ac
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_value[1]] 1
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_value[2]] a
[ POST LOG self.p_string[1] = self.p_char[2]  :  list(self.p_btree[1].items())] []
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[0]] a
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[1]] a
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[2]] None
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[0]] ac
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[1]] 1
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[2]] a
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[1].items())	] []
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[0]] a
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[1]] a
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[2]] None
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[0]] ac
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[1]] 1
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[2]] a
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[1].items())] []
[ LOG self.p_string[0] = self.p_char[2]  :  self.p_key[0]] a
[ LOG self.p_string[0] = self.p_char[2]  :  self.p_key[1]] a
[ LOG self.p_string[0] = self.p_char[2]  :  self.p_key[2]] None
[ LOG self.p_string[0] = self.p_char[2]  :  self.p_value[0]] ac
[ LOG self.p_string[0] = self.p_char[2]  :  self.p_value[1]] 1
[ LOG self.p_string[0] = self.p_char[2]  :  self.p_value[2]] a
[ LOG self.p_string[0] = self.p_char[2]  :  list(self.p_btree[1].items())	] []
[ POST LOG self.p_string[0] = self.p_char[2]  :  self.p_key[0]] a
[ POST LOG self.p_string[0] = self.p_char[2]  :  self.p_key[1]] a
[ POST LOG self.p_string[0] = self.p_char[2]  :  self.p_key[2]] None
[ POST LOG self.p_string[0] = self.p_char[2]  :  self.p_value[0]] ac
[ POST LOG self.p_string[0] = self.p_char[2]  :  self.p_value[1]] 1
[ POST LOG self.p_string[0] = self.p_char[2]  :  self.p_value[2]] a
[ POST LOG self.p_string[0] = self.p_char[2]  :  list(self.p_btree[1].items())] []
[ LOG self.p_key[2] = self.p_string[0]  :  self.p_key[0]] a
[ LOG self.p_key[2] = self.p_string[0]  :  self.p_key[1]] a
[ LOG self.p_key[2] = self.p_string[0]  :  self.p_key[2]] None
[ LOG self.p_key[2] = self.p_string[0]  :  self.p_value[0]] ac
[ LOG self.p_key[2] = self.p_string[0]  :  self.p_value[1]] 1
[ LOG self.p_key[2] = self.p_string[0]  :  self.p_value[2]] a
[ LOG self.p_key[2] = self.p_string[0]  :  list(self.p_btree[1].items())	] []
[ POST LOG self.p_key[2] = self.p_string[0]  :  self.p_key[0]] a
[ POST LOG self.p_key[2] = self.p_string[0]  :  self.p_key[1]] a
[ POST LOG self.p_key[2] = self.p_string[0]  :  self.p_key[2]] c
[ POST LOG self.p_key[2] = self.p_string[0]  :  self.p_value[0]] ac
[ POST LOG self.p_key[2] = self.p_string[0]  :  self.p_value[1]] 1
[ POST LOG self.p_key[2] = self.p_string[0]  :  self.p_value[2]] a
[ POST LOG self.p_key[2] = self.p_string[0]  :  list(self.p_btree[1].items())] []
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[0]] a
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[1]] a
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[2]] c
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[0]] ac
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[1]] 1
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[2]] a
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[1].items())	] []
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[0]] a
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[1]] a
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[2]] c
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[0]] ac
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[1]] 1
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[2]] a
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[1].items())] [('a', 'ac')]
[ LOG self.p_string[2] = self.p_char[2]  :  self.p_key[0]] a
[ LOG self.p_string[2] = self.p_char[2]  :  self.p_key[1]] a
[ LOG self.p_string[2] = self.p_char[2]  :  self.p_key[2]] c
[ LOG self.p_string[2] = self.p_char[2]  :  self.p_value[0]] ac
[ LOG self.p_string[2] = self.p_char[2]  :  self.p_value[1]] 1
[ LOG self.p_string[2] = self.p_char[2]  :  self.p_value[2]] a
[ LOG self.p_string[2] = self.p_char[2]  :  list(self.p_btree[1].items())	] [('a', 'ac')]
[ POST LOG self.p_string[2] = self.p_char[2]  :  self.p_key[0]] a
[ POST LOG self.p_string[2] = self.p_char[2]  :  self.p_key[1]] a
[ POST LOG self.p_string[2] = self.p_char[2]  :  self.p_key[2]] c
[ POST LOG self.p_string[2] = self.p_char[2]  :  self.p_value[0]] ac
[ POST LOG self.p_string[2] = self.p_char[2]  :  self.p_value[1]] 1
[ POST LOG self.p_string[2] = self.p_char[2]  :  self.p_value[2]] a
[ POST LOG self.p_string[2] = self.p_char[2]  :  list(self.p_btree[1].items())] [('a', 'ac')]
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[0]] a
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[1]] a
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[2]] c
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[0]] ac
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[1]] 1
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[2]] a
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  list(self.p_btree[1].items())	] [('a', 'ac')]
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[0]] a
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[1]] a
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[2]] c
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[0]] ac
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[1]] 1
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[2]] a
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  list(self.p_btree[1].items())] [('a', 'ac'), ('c', 1)]
[ LOG self.p_string[0] = self.p_char[1]  :  self.p_key[0]] a
[ LOG self.p_string[0] = self.p_char[1]  :  self.p_key[1]] a
[ LOG self.p_string[0] = self.p_char[1]  :  self.p_key[2]] c
[ LOG self.p_string[0] = self.p_char[1]  :  self.p_value[0]] ac
[ LOG self.p_string[0] = self.p_char[1]  :  self.p_value[1]] 1
[ LOG self.p_string[0] = self.p_char[1]  :  self.p_value[2]] a
[ LOG self.p_string[0] = self.p_char[1]  :  list(self.p_btree[1].items())	] [('a', 'ac'), ('c', 1)]
[ POST LOG self.p_string[0] = self.p_char[1]  :  self.p_key[0]] a
[ POST LOG self.p_string[0] = self.p_char[1]  :  self.p_key[1]] a
[ POST LOG self.p_string[0] = self.p_char[1]  :  self.p_key[2]] c
[ POST LOG self.p_string[0] = self.p_char[1]  :  self.p_value[0]] ac
[ POST LOG self.p_string[0] = self.p_char[1]  :  self.p_value[1]] 1
[ POST LOG self.p_string[0] = self.p_char[1]  :  self.p_value[2]] a
[ POST LOG self.p_string[0] = self.p_char[1]  :  list(self.p_btree[1].items())] [('a', 'ac'), ('c', 1)]
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_key[0]] a
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_key[1]] a
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_key[2]] c
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_value[0]] ac
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_value[1]] 1
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_value[2]] a
[ LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[1].items())	] [('a', 'ac'), ('c', 1)]
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_key[0]] a
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_key[1]] a
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_key[2]] c
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_value[0]] 3
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_value[1]] 1
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_value[2]] a
[ POST LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[1].items())] [('a', 'ac'), ('c', 1)]
[ LOG self.p_char[2] ="b"  :  self.p_key[0]] a
[ LOG self.p_char[2] ="b"  :  self.p_key[1]] a
[ LOG self.p_char[2] ="b"  :  self.p_key[2]] c
[ LOG self.p_char[2] ="b"  :  self.p_value[0]] 3
[ LOG self.p_char[2] ="b"  :  self.p_value[1]] 1
[ LOG self.p_char[2] ="b"  :  self.p_value[2]] a
[ LOG self.p_char[2] ="b"  :  list(self.p_btree[1].items())	] [('a', 'ac'), ('c', 1)]
[ POST LOG self.p_char[2] ="b"  :  self.p_key[0]] a
[ POST LOG self.p_char[2] ="b"  :  self.p_key[1]] a
[ POST LOG self.p_char[2] ="b"  :  self.p_key[2]] c
[ POST LOG self.p_char[2] ="b"  :  self.p_value[0]] 3
[ POST LOG self.p_char[2] ="b"  :  self.p_value[1]] 1
[ POST LOG self.p_char[2] ="b"  :  self.p_value[2]] a
[ POST LOG self.p_char[2] ="b"  :  list(self.p_btree[1].items())] [('a', 'ac'), ('c', 1)]
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[0]] a
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[1]] a
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[2]] c
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[0]] 3
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[1]] 1
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[2]] a
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[1].items())	] [('a', 'ac'), ('c', 1)]
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[0]] a
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[1]] a
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[2]] c
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[0]] 3
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[1]] 1
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[2]] a
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[1].items())] [('a', 'ac'), ('c', 3)]
[ LOG self.p_int[1] = 10  :  self.p_key[0]] a
[ LOG self.p_int[1] = 10  :  self.p_key[1]] a
[ LOG self.p_int[1] = 10  :  self.p_key[2]] c
[ LOG self.p_int[1] = 10  :  self.p_value[0]] 3
[ LOG self.p_int[1] = 10  :  self.p_value[1]] 1
[ LOG self.p_int[1] = 10  :  self.p_value[2]] a
[ LOG self.p_int[1] = 10  :  list(self.p_btree[1].items())	] [('a', 'ac'), ('c', 3)]
[ POST LOG self.p_int[1] = 10  :  self.p_key[0]] a
[ POST LOG self.p_int[1] = 10  :  self.p_key[1]] a
[ POST LOG self.p_int[1] = 10  :  self.p_key[2]] c
[ POST LOG self.p_int[1] = 10  :  self.p_value[0]] 3
[ POST LOG self.p_int[1] = 10  :  self.p_value[1]] 1
[ POST LOG self.p_int[1] = 10  :  self.p_value[2]] a
[ POST LOG self.p_int[1] = 10  :  list(self.p_btree[1].items())] [('a', 'ac'), ('c', 3)]
[ LOG self.p_value[0] = self.p_int[2]  :  self.p_key[0]] a
[ LOG self.p_value[0] = self.p_int[2]  :  self.p_key[1]] a
[ LOG self.p_value[0] = self.p_int[2]  :  self.p_key[2]] c
[ LOG self.p_value[0] = self.p_int[2]  :  self.p_value[0]] 3
[ LOG self.p_value[0] = self.p_int[2]  :  self.p_value[1]] 1
[ LOG self.p_value[0] = self.p_int[2]  :  self.p_value[2]] a
[ LOG self.p_value[0] = self.p_int[2]  :  list(self.p_btree[1].items())	] [('a', 'ac'), ('c', 3)]
[ POST LOG self.p_value[0] = self.p_int[2]  :  self.p_key[0]] a
[ POST LOG self.p_value[0] = self.p_int[2]  :  self.p_key[1]] a
[ POST LOG self.p_value[0] = self.p_int[2]  :  self.p_key[2]] c
[ POST LOG self.p_value[0] = self.p_int[2]  :  self.p_value[0]] 7
[ POST LOG self.p_value[0] = self.p_int[2]  :  self.p_value[1]] 1
[ POST LOG self.p_value[0] = self.p_int[2]  :  self.p_value[2]] a
[ POST LOG self.p_value[0] = self.p_int[2]  :  list(self.p_btree[1].items())] [('a', 'ac'), ('c', 3)]
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_key[0]] a
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_key[1]] a
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_key[2]] c
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_value[0]] 7
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_value[1]] 1
[ LOG self.p_key[2] = self.p_string[1]  :  self.p_value[2]] a
[ LOG self.p_key[2] = self.p_string[1]  :  list(self.p_btree[1].items())	] [('a', 'ac'), ('c', 3)]
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_key[0]] a
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_key[1]] a
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_key[2]] c
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_value[0]] 7
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_value[1]] 1
[ POST LOG self.p_key[2] = self.p_string[1]  :  self.p_value[2]] a
[ POST LOG self.p_key[2] = self.p_string[1]  :  list(self.p_btree[1].items())] [('a', 'ac'), ('c', 3)]
[ LOG self.p_int[2] = 3  :  self.p_key[0]] a
[ LOG self.p_int[2] = 3  :  self.p_key[1]] a
[ LOG self.p_int[2] = 3  :  self.p_key[2]] c
[ LOG self.p_int[2] = 3  :  self.p_value[0]] 7
[ LOG self.p_int[2] = 3  :  self.p_value[1]] 1
[ LOG self.p_int[2] = 3  :  self.p_value[2]] a
[ LOG self.p_int[2] = 3  :  list(self.p_btree[1].items())	] [('a', 'ac'), ('c', 3)]
[ POST LOG self.p_int[2] = 3  :  self.p_key[0]] a
[ POST LOG self.p_int[2] = 3  :  self.p_key[1]] a
[ POST LOG self.p_int[2] = 3  :  self.p_key[2]] c
[ POST LOG self.p_int[2] = 3  :  self.p_value[0]] 7
[ POST LOG self.p_int[2] = 3  :  self.p_value[1]] 1
[ POST LOG self.p_int[2] = 3  :  self.p_value[2]] a
[ POST LOG self.p_int[2] = 3  :  list(self.p_btree[1].items())] [('a', 'ac'), ('c', 3)]
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[0]] a
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[1]] a
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[2]] c
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[0]] 7
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[1]] 1
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[2]] a
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[1].items())	] [('a', 'ac'), ('c', 3)]
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[0]] a
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[1]] a
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_key[2]] c
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[0]] 7
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[1]] 1
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  self.p_value[2]] a
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[2])  :  list(self.p_btree[1].items())] [('a', 'ac'), ('c', 3)]
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_key[0]] a
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_key[1]] a
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_key[2]] c
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_value[0]] 7
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_value[1]] 1
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_value[2]] a
[ LOG self.p_string[1] = self.p_char[2]  :  list(self.p_btree[1].items())	] [('a', 'ac'), ('c', 3)]
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_key[0]] a
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_key[1]] a
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_key[2]] c
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_value[0]] 7
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_value[1]] 1
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_value[2]] a
[ POST LOG self.p_string[1] = self.p_char[2]  :  list(self.p_btree[1].items())] [('a', 'ac'), ('c', 3)]
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[0])  :  self.p_key[0]] a
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[0])  :  self.p_key[1]] a
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[0])  :  self.p_key[2]] c
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[0])  :  self.p_value[0]] 7
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[0])  :  self.p_value[1]] 1
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[0])  :  self.p_value[2]] a
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[0])  :  list(self.p_btree[1].items())	] [('a', 'ac'), ('c', 3)]
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[0])  :  self.p_key[0]] a
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[0])  :  self.p_key[1]] a
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[0])  :  self.p_key[2]] c
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[0])  :  self.p_value[0]] 7
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[0])  :  self.p_value[1]] 1
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[0])  :  self.p_value[2]] a
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[0])  :  list(self.p_btree[1].items())] [('a', 'ac'), ('c', 3)]
[ LOG self.p_char[1] ="d"  :  self.p_key[0]] a
[ LOG self.p_char[1] ="d"  :  self.p_key[1]] a
[ LOG self.p_char[1] ="d"  :  self.p_key[2]] c
[ LOG self.p_char[1] ="d"  :  self.p_value[0]] 7
[ LOG self.p_char[1] ="d"  :  self.p_value[1]] 1
[ LOG self.p_char[1] ="d"  :  self.p_value[2]] a
[ LOG self.p_char[1] ="d"  :  list(self.p_btree[1].items())	] [('a', 'ac'), ('c', 3)]
[ POST LOG self.p_char[1] ="d"  :  self.p_key[0]] a
[ POST LOG self.p_char[1] ="d"  :  self.p_key[1]] a
[ POST LOG self.p_char[1] ="d"  :  self.p_key[2]] c
[ POST LOG self.p_char[1] ="d"  :  self.p_value[0]] 7
[ POST LOG self.p_char[1] ="d"  :  self.p_value[1]] 1
[ POST LOG self.p_char[1] ="d"  :  self.p_value[2]] a
[ POST LOG self.p_char[1] ="d"  :  list(self.p_btree[1].items())] [('a', 'ac'), ('c', 3)]
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_key[0]] a
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_key[1]] a
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_key[2]] c
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_value[0]] 7
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_value[1]] 1
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_value[2]] a
[ LOG self.p_btree[1].pop(self.p_key[0],0)  :  list(self.p_btree[1].items())	] [('a', 'ac'), ('c', 3)]
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_key[0]] a
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_key[1]] a
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_key[2]] c
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_value[0]] 7
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_value[1]] 1
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  self.p_value[2]] a
[ POST LOG self.p_btree[1].pop(self.p_key[0],0)  :  list(self.p_btree[1].items())] [('c', 3)]
[ LOG self.p_value[0] = self.p_string[1]  :  self.p_key[0]] a
[ LOG self.p_value[0] = self.p_string[1]  :  self.p_key[1]] a
[ LOG self.p_value[0] = self.p_string[1]  :  self.p_key[2]] c
[ LOG self.p_value[0] = self.p_string[1]  :  self.p_value[0]] 7
[ LOG self.p_value[0] = self.p_string[1]  :  self.p_value[1]] 1
[ LOG self.p_value[0] = self.p_string[1]  :  self.p_value[2]] a
[ LOG self.p_value[0] = self.p_string[1]  :  list(self.p_btree[1].items())	] [('c', 3)]
[ POST LOG self.p_value[0] = self.p_string[1]  :  self.p_key[0]] a
[ POST LOG self.p_value[0] = self.p_string[1]  :  self.p_key[1]] a
[ POST LOG self.p_value[0] = self.p_string[1]  :  self.p_key[2]] c
[ POST LOG self.p_value[0] = self.p_string[1]  :  self.p_value[0]] b
[ POST LOG self.p_value[0] = self.p_string[1]  :  self.p_value[1]] 1
[ POST LOG self.p_value[0] = self.p_string[1]  :  self.p_value[2]] a
[ POST LOG self.p_value[0] = self.p_string[1]  :  list(self.p_btree[1].items())] [('c', 3)]
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_key[0]] a
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_key[1]] a
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_key[2]] c
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_value[0]] b
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_value[1]] 1
[ LOG self.p_value[2] = self.p_string[2]  :  self.p_value[2]] a
[ LOG self.p_value[2] = self.p_string[2]  :  list(self.p_btree[1].items())	] [('c', 3)]
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_key[0]] a
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_key[1]] a
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_key[2]] c
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_value[0]] b
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_value[1]] 1
[ POST LOG self.p_value[2] = self.p_string[2]  :  self.p_value[2]] c
[ POST LOG self.p_value[2] = self.p_string[2]  :  list(self.p_btree[1].items())] [('c', 3)]
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_key[0]] a
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_key[1]] a
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_key[2]] c
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_value[0]] b
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_value[1]] 1
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_value[2]] c
[ LOG self.p_string[1] += self.p_char[1]  :  list(self.p_btree[1].items())	] [('c', 3)]
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_key[0]] a
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_key[1]] a
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_key[2]] c
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_value[0]] b
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_value[1]] 1
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_value[2]] c
[ POST LOG self.p_string[1] += self.p_char[1]  :  list(self.p_btree[1].items())] [('c', 3)]
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[2]})  :  self.p_key[0]] a
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[2]})  :  self.p_key[1]] a
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[2]})  :  self.p_key[2]] c
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[2]})  :  self.p_value[0]] b
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[2]})  :  self.p_value[1]] 1
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[2]})  :  self.p_value[2]] c
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[2]})  :  list(self.p_btree[1].items())	] [('c', 3)]
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[2]})  :  self.p_key[0]] a
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[2]})  :  self.p_key[1]] a
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[2]})  :  self.p_key[2]] c
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[2]})  :  self.p_value[0]] b
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[2]})  :  self.p_value[1]] 1
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[2]})  :  self.p_value[2]] c
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[2]})  :  list(self.p_btree[1].items())] [('a', 'c'), ('c', 3)]
[ LOG self.p_key[1] = self.p_string[0]  :  self.p_key[0]] a
[ LOG self.p_key[1] = self.p_string[0]  :  self.p_key[1]] a
[ LOG self.p_key[1] = self.p_string[0]  :  self.p_key[2]] c
[ LOG self.p_key[1] = self.p_string[0]  :  self.p_value[0]] b
[ LOG self.p_key[1] = self.p_string[0]  :  self.p_value[1]] 1
[ LOG self.p_key[1] = self.p_string[0]  :  self.p_value[2]] c
[ LOG self.p_key[1] = self.p_string[0]  :  list(self.p_btree[1].items())	] [('a', 'c'), ('c', 3)]
[ POST LOG self.p_key[1] = self.p_string[0]  :  self.p_key[0]] a
[ POST LOG self.p_key[1] = self.p_string[0]  :  self.p_key[1]] b
[ POST LOG self.p_key[1] = self.p_string[0]  :  self.p_key[2]] c
[ POST LOG self.p_key[1] = self.p_string[0]  :  self.p_value[0]] b
[ POST LOG self.p_key[1] = self.p_string[0]  :  self.p_value[1]] 1
[ POST LOG self.p_key[1] = self.p_string[0]  :  self.p_value[2]] c
[ POST LOG self.p_key[1] = self.p_string[0]  :  list(self.p_btree[1].items())] [('a', 'c'), ('c', 3)]
[ LOG self.p_value[1] = self.p_string[1]  :  self.p_key[0]] a
[ LOG self.p_value[1] = self.p_string[1]  :  self.p_key[1]] b
[ LOG self.p_value[1] = self.p_string[1]  :  self.p_key[2]] c
[ LOG self.p_value[1] = self.p_string[1]  :  self.p_value[0]] b
[ LOG self.p_value[1] = self.p_string[1]  :  self.p_value[1]] 1
[ LOG self.p_value[1] = self.p_string[1]  :  self.p_value[2]] c
[ LOG self.p_value[1] = self.p_string[1]  :  list(self.p_btree[1].items())	] [('a', 'c'), ('c', 3)]
[ POST LOG self.p_value[1] = self.p_string[1]  :  self.p_key[0]] a
[ POST LOG self.p_value[1] = self.p_string[1]  :  self.p_key[1]] b
[ POST LOG self.p_value[1] = self.p_string[1]  :  self.p_key[2]] c
[ POST LOG self.p_value[1] = self.p_string[1]  :  self.p_value[0]] b
[ POST LOG self.p_value[1] = self.p_string[1]  :  self.p_value[1]] bd
[ POST LOG self.p_value[1] = self.p_string[1]  :  self.p_value[2]] c
[ POST LOG self.p_value[1] = self.p_string[1]  :  list(self.p_btree[1].items())] [('a', 'c'), ('c', 3)]
[ LOG self.p_char[2] ="c"  :  self.p_key[0]] a
[ LOG self.p_char[2] ="c"  :  self.p_key[1]] b
[ LOG self.p_char[2] ="c"  :  self.p_key[2]] c
[ LOG self.p_char[2] ="c"  :  self.p_value[0]] b
[ LOG self.p_char[2] ="c"  :  self.p_value[1]] bd
[ LOG self.p_char[2] ="c"  :  self.p_value[2]] c
[ LOG self.p_char[2] ="c"  :  list(self.p_btree[1].items())	] [('a', 'c'), ('c', 3)]
[ POST LOG self.p_char[2] ="c"  :  self.p_key[0]] a
[ POST LOG self.p_char[2] ="c"  :  self.p_key[1]] b
[ POST LOG self.p_char[2] ="c"  :  self.p_key[2]] c
[ POST LOG self.p_char[2] ="c"  :  self.p_value[0]] b
[ POST LOG self.p_char[2] ="c"  :  self.p_value[1]] bd
[ POST LOG self.p_char[2] ="c"  :  self.p_value[2]] c
[ POST LOG self.p_char[2] ="c"  :  list(self.p_btree[1].items())] [('a', 'c'), ('c', 3)]
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[0]] a
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[1]] b
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[2]] c
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[0]] b
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[1]] bd
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[2]] c
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  list(self.p_btree[1].items())	] [('a', 'c'), ('c', 3)]
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[0]] a
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[1]] b
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[2]] c
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[0]] b
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[1]] bd
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[2]] c
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  list(self.p_btree[1].items())] [('a', 'c'), ('c', 3)]
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[0]] a
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[1]] b
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[2]] c
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[0]] b
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[1]] bd
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[2]] c
[ LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[1].items())	] [('a', 'c'), ('c', 3)]
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[0]] a
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[1]] b
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_key[2]] c
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[0]] b
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[1]] bd
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  self.p_value[2]] c
[ POST LOG self.p_btree[1].pop(self.p_key[1],0)  :  list(self.p_btree[1].items())] [('a', 'c'), ('c', 3)]
[ LOG self.p_key[2] = self.p_int[1]  :  self.p_key[0]] a
[ LOG self.p_key[2] = self.p_int[1]  :  self.p_key[1]] b
[ LOG self.p_key[2] = self.p_int[1]  :  self.p_key[2]] c
[ LOG self.p_key[2] = self.p_int[1]  :  self.p_value[0]] b
[ LOG self.p_key[2] = self.p_int[1]  :  self.p_value[1]] bd
[ LOG self.p_key[2] = self.p_int[1]  :  self.p_value[2]] c
[ LOG self.p_key[2] = self.p_int[1]  :  list(self.p_btree[1].items())	] [('a', 'c'), ('c', 3)]
[ POST LOG self.p_key[2] = self.p_int[1]  :  self.p_key[0]] a
[ POST LOG self.p_key[2] = self.p_int[1]  :  self.p_key[1]] b
[ POST LOG self.p_key[2] = self.p_int[1]  :  self.p_key[2]] 10
[ POST LOG self.p_key[2] = self.p_int[1]  :  self.p_value[0]] b
[ POST LOG self.p_key[2] = self.p_int[1]  :  self.p_value[1]] bd
[ POST LOG self.p_key[2] = self.p_int[1]  :  self.p_value[2]] c
[ POST LOG self.p_key[2] = self.p_int[1]  :  list(self.p_btree[1].items())] [('a', 'c'), ('c', 3)]
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_key[0]] a
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_key[1]] b
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_key[2]] 10
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_value[0]] b
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_value[1]] bd
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_value[2]] c
[ LOG self.p_string[1] = self.p_char[2]  :  list(self.p_btree[1].items())	] [('a', 'c'), ('c', 3)]
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_key[0]] a
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_key[1]] b
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_key[2]] 10
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_value[0]] b
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_value[1]] bd
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_value[2]] c
[ POST LOG self.p_string[1] = self.p_char[2]  :  list(self.p_btree[1].items())] [('a', 'c'), ('c', 3)]
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[0]] a
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[1]] b
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[2]] 10
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[0]] b
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[1]] bd
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[2]] c
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[1].items())	] [('a', 'c'), ('c', 3)]
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[0]] a
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[1]] b
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[2]] 10
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[0]] b
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[1]] bd
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[2]] c
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[1].items())] [(10, 'b'), ('a', 'c'), ('c', 3)]
[ LOG self.p_key[0] = self.p_string[1]  :  self.p_key[0]] a
[ LOG self.p_key[0] = self.p_string[1]  :  self.p_key[1]] b
[ LOG self.p_key[0] = self.p_string[1]  :  self.p_key[2]] 10
[ LOG self.p_key[0] = self.p_string[1]  :  self.p_value[0]] b
[ LOG self.p_key[0] = self.p_string[1]  :  self.p_value[1]] bd
[ LOG self.p_key[0] = self.p_string[1]  :  self.p_value[2]] c
[ LOG self.p_key[0] = self.p_string[1]  :  list(self.p_btree[1].items())	] [(10, 'b'), ('a', 'c'), ('c', 3)]
[ POST LOG self.p_key[0] = self.p_string[1]  :  self.p_key[0]] c
[ POST LOG self.p_key[0] = self.p_string[1]  :  self.p_key[1]] b
[ POST LOG self.p_key[0] = self.p_string[1]  :  self.p_key[2]] 10
[ POST LOG self.p_key[0] = self.p_string[1]  :  self.p_value[0]] b
[ POST LOG self.p_key[0] = self.p_string[1]  :  self.p_value[1]] bd
[ POST LOG self.p_key[0] = self.p_string[1]  :  self.p_value[2]] c
[ POST LOG self.p_key[0] = self.p_string[1]  :  list(self.p_btree[1].items())] [(10, 'b'), ('a', 'c'), ('c', 3)]
[ LOG self.p_string[0] += self.p_char[1]  :  self.p_key[0]] c
[ LOG self.p_string[0] += self.p_char[1]  :  self.p_key[1]] b
[ LOG self.p_string[0] += self.p_char[1]  :  self.p_key[2]] 10
[ LOG self.p_string[0] += self.p_char[1]  :  self.p_value[0]] b
[ LOG self.p_string[0] += self.p_char[1]  :  self.p_value[1]] bd
[ LOG self.p_string[0] += self.p_char[1]  :  self.p_value[2]] c
[ LOG self.p_string[0] += self.p_char[1]  :  list(self.p_btree[1].items())	] [(10, 'b'), ('a', 'c'), ('c', 3)]
[ POST LOG self.p_string[0] += self.p_char[1]  :  self.p_key[0]] c
[ POST LOG self.p_string[0] += self.p_char[1]  :  self.p_key[1]] b
[ POST LOG self.p_string[0] += self.p_char[1]  :  self.p_key[2]] 10
[ POST LOG self.p_string[0] += self.p_char[1]  :  self.p_value[0]] b
[ POST LOG self.p_string[0] += self.p_char[1]  :  self.p_value[1]] bd
[ POST LOG self.p_string[0] += self.p_char[1]  :  self.p_value[2]] c
[ POST LOG self.p_string[0] += self.p_char[1]  :  list(self.p_btree[1].items())] [(10, 'b'), ('a', 'c'), ('c', 3)]
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[0]] c
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[1]] b
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[2]] 10
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[0]] b
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[1]] bd
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[2]] c
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[1].items())	] [(10, 'b'), ('a', 'c'), ('c', 3)]
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[0]] c
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[1]] b
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[2]] 10
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[0]] b
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[1]] bd
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[2]] c
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[1].items())] [(10, 'bd'), ('a', 'c'), ('c', 3)]
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_key[0]] c
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_key[1]] b
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_key[2]] 10
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_value[0]] b
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_value[1]] bd
[ LOG self.p_value[0] = self.p_string[2]  :  self.p_value[2]] c
[ LOG self.p_value[0] = self.p_string[2]  :  list(self.p_btree[1].items())	] [(10, 'bd'), ('a', 'c'), ('c', 3)]
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_key[0]] c
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_key[1]] b
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_key[2]] 10
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_value[0]] c
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_value[1]] bd
[ POST LOG self.p_value[0] = self.p_string[2]  :  self.p_value[2]] c
[ POST LOG self.p_value[0] = self.p_string[2]  :  list(self.p_btree[1].items())] [(10, 'bd'), ('a', 'c'), ('c', 3)]
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[0]] c
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[1]] b
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[2]] 10
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[0]] c
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[1]] bd
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[2]] c
[ LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[1].items())	] [(10, 'bd'), ('a', 'c'), ('c', 3)]
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[0]] c
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[1]] b
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[2]] 10
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[0]] c
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[1]] bd
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[2]] c
[ POST LOG self.p_btree[1].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[1].items())] [(10, 'bd'), ('a', 'c'), ('c', 'c')]
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[0]] c
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[1]] b
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[2]] 10
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[0]] c
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[1]] bd
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[2]] c
[ LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  list(self.p_btree[1].items())	] [(10, 'bd'), ('a', 'c'), ('c', 'c')]
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[0]] c
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[1]] b
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_key[2]] 10
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[0]] c
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[1]] bd
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  self.p_value[2]] c
[ POST LOG self.p_btree[1].insert(self.p_key[2],self.p_value[1])  :  list(self.p_btree[1].items())] [(10, 'bd'), ('a', 'c'), ('c', 'c')]
[ LOG self.p_value[0] = self.p_int[2]  :  self.p_key[0]] c
[ LOG self.p_value[0] = self.p_int[2]  :  self.p_key[1]] b
[ LOG self.p_value[0] = self.p_int[2]  :  self.p_key[2]] 10
[ LOG self.p_value[0] = self.p_int[2]  :  self.p_value[0]] c
[ LOG self.p_value[0] = self.p_int[2]  :  self.p_value[1]] bd
[ LOG self.p_value[0] = self.p_int[2]  :  self.p_value[2]] c
[ LOG self.p_value[0] = self.p_int[2]  :  list(self.p_btree[1].items())	] [(10, 'bd'), ('a', 'c'), ('c', 'c')]
[ POST LOG self.p_value[0] = self.p_int[2]  :  self.p_key[0]] c
[ POST LOG self.p_value[0] = self.p_int[2]  :  self.p_key[1]] b
[ POST LOG self.p_value[0] = self.p_int[2]  :  self.p_key[2]] 10
[ POST LOG self.p_value[0] = self.p_int[2]  :  self.p_value[0]] 3
[ POST LOG self.p_value[0] = self.p_int[2]  :  self.p_value[1]] bd
[ POST LOG self.p_value[0] = self.p_int[2]  :  self.p_value[2]] c
[ POST LOG self.p_value[0] = self.p_int[2]  :  list(self.p_btree[1].items())] [(10, 'bd'), ('a', 'c'), ('c', 'c')]
[ LOG self.p_int[2] = 2  :  self.p_key[0]] c
[ LOG self.p_int[2] = 2  :  self.p_key[1]] b
[ LOG self.p_int[2] = 2  :  self.p_key[2]] 10
[ LOG self.p_int[2] = 2  :  self.p_value[0]] 3
[ LOG self.p_int[2] = 2  :  self.p_value[1]] bd
[ LOG self.p_int[2] = 2  :  self.p_value[2]] c
[ LOG self.p_int[2] = 2  :  list(self.p_btree[1].items())	] [(10, 'bd'), ('a', 'c'), ('c', 'c')]
[ POST LOG self.p_int[2] = 2  :  self.p_key[0]] c
[ POST LOG self.p_int[2] = 2  :  self.p_key[1]] b
[ POST LOG self.p_int[2] = 2  :  self.p_key[2]] 10
[ POST LOG self.p_int[2] = 2  :  self.p_value[0]] 3
[ POST LOG self.p_int[2] = 2  :  self.p_value[1]] bd
[ POST LOG self.p_int[2] = 2  :  self.p_value[2]] c
[ POST LOG self.p_int[2] = 2  :  list(self.p_btree[1].items())] [(10, 'bd'), ('a', 'c'), ('c', 'c')]
[ LOG self.p_char[2] ="a"  :  self.p_key[0]] c
[ LOG self.p_char[2] ="a"  :  self.p_key[1]] b
[ LOG self.p_char[2] ="a"  :  self.p_key[2]] 10
[ LOG self.p_char[2] ="a"  :  self.p_value[0]] 3
[ LOG self.p_char[2] ="a"  :  self.p_value[1]] bd
[ LOG self.p_char[2] ="a"  :  self.p_value[2]] c
[ LOG self.p_char[2] ="a"  :  list(self.p_btree[1].items())	] [(10, 'bd'), ('a', 'c'), ('c', 'c')]
[ POST LOG self.p_char[2] ="a"  :  self.p_key[0]] c
[ POST LOG self.p_char[2] ="a"  :  self.p_key[1]] b
[ POST LOG self.p_char[2] ="a"  :  self.p_key[2]] 10
[ POST LOG self.p_char[2] ="a"  :  self.p_value[0]] 3
[ POST LOG self.p_char[2] ="a"  :  self.p_value[1]] bd
[ POST LOG self.p_char[2] ="a"  :  self.p_value[2]] c
[ POST LOG self.p_char[2] ="a"  :  list(self.p_btree[1].items())] [(10, 'bd'), ('a', 'c'), ('c', 'c')]
[ LOG self.p_key[2] = self.p_int[2]  :  self.p_key[0]] c
[ LOG self.p_key[2] = self.p_int[2]  :  self.p_key[1]] b
[ LOG self.p_key[2] = self.p_int[2]  :  self.p_key[2]] 10
[ LOG self.p_key[2] = self.p_int[2]  :  self.p_value[0]] 3
[ LOG self.p_key[2] = self.p_int[2]  :  self.p_value[1]] bd
[ LOG self.p_key[2] = self.p_int[2]  :  self.p_value[2]] c
[ LOG self.p_key[2] = self.p_int[2]  :  list(self.p_btree[1].items())	] [(10, 'bd'), ('a', 'c'), ('c', 'c')]
[ POST LOG self.p_key[2] = self.p_int[2]  :  self.p_key[0]] c
[ POST LOG self.p_key[2] = self.p_int[2]  :  self.p_key[1]] b
[ POST LOG self.p_key[2] = self.p_int[2]  :  self.p_key[2]] 2
[ POST LOG self.p_key[2] = self.p_int[2]  :  self.p_value[0]] 3
[ POST LOG self.p_key[2] = self.p_int[2]  :  self.p_value[1]] bd
[ POST LOG self.p_key[2] = self.p_int[2]  :  self.p_value[2]] c
[ POST LOG self.p_key[2] = self.p_int[2]  :  list(self.p_btree[1].items())] [(10, 'bd'), ('a', 'c'), ('c', 'c')]
[ LOG self.p_btree[2] = OOBTree()  :  self.p_key[0]] c
[ LOG self.p_btree[2] = OOBTree()  :  self.p_key[1]] b
[ LOG self.p_btree[2] = OOBTree()  :  self.p_key[2]] 2
[ LOG self.p_btree[2] = OOBTree()  :  self.p_value[0]] 3
[ LOG self.p_btree[2] = OOBTree()  :  self.p_value[1]] bd
[ LOG self.p_btree[2] = OOBTree()  :  self.p_value[2]] c
[ LOG self.p_btree[2] = OOBTree()  :  list(self.p_btree[1].items())	] [(10, 'bd'), ('a', 'c'), ('c', 'c')]
[ POST LOG self.p_btree[2] = OOBTree()  :  self.p_key[0]] c
[ POST LOG self.p_btree[2] = OOBTree()  :  self.p_key[1]] b
[ POST LOG self.p_btree[2] = OOBTree()  :  self.p_key[2]] 2
[ POST LOG self.p_btree[2] = OOBTree()  :  self.p_value[0]] 3
[ POST LOG self.p_btree[2] = OOBTree()  :  self.p_value[1]] bd
[ POST LOG self.p_btree[2] = OOBTree()  :  self.p_value[2]] c
[ POST LOG self.p_btree[2] = OOBTree()  :  list(self.p_btree[1].items())] [(10, 'bd'), ('a', 'c'), ('c', 'c')]
[ POST LOG self.p_btree[2] = OOBTree()  :  list(self.p_btree[2].items())] []
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_key[0]] c
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_key[1]] b
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_key[2]] 2
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_value[0]] 3
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_value[1]] bd
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_value[2]] c
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  list(self.p_btree[1].items())	] [(10, 'bd'), ('a', 'c'), ('c', 'c')]
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_key[0]] c
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_key[1]] b
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_key[2]] 2
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_value[0]] 3
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_value[1]] bd
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_value[2]] c
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  list(self.p_btree[1].items())] [(10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  list(self.p_btree[2].items())] []
[ LOG self.p_key[1] = self.p_string[1]  :  self.p_key[0]] c
[ LOG self.p_key[1] = self.p_string[1]  :  self.p_key[1]] b
[ LOG self.p_key[1] = self.p_string[1]  :  self.p_key[2]] 2
[ LOG self.p_key[1] = self.p_string[1]  :  self.p_value[0]] 3
[ LOG self.p_key[1] = self.p_string[1]  :  self.p_value[1]] bd
[ LOG self.p_key[1] = self.p_string[1]  :  self.p_value[2]] c
[ LOG self.p_key[1] = self.p_string[1]  :  list(self.p_btree[1].items())	] [(10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_key[1] = self.p_string[1]  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_key[1] = self.p_string[1]  :  self.p_key[0]] c
[ POST LOG self.p_key[1] = self.p_string[1]  :  self.p_key[1]] c
[ POST LOG self.p_key[1] = self.p_string[1]  :  self.p_key[2]] 2
[ POST LOG self.p_key[1] = self.p_string[1]  :  self.p_value[0]] 3
[ POST LOG self.p_key[1] = self.p_string[1]  :  self.p_value[1]] bd
[ POST LOG self.p_key[1] = self.p_string[1]  :  self.p_value[2]] c
[ POST LOG self.p_key[1] = self.p_string[1]  :  list(self.p_btree[1].items())] [(10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_key[1] = self.p_string[1]  :  list(self.p_btree[2].items())] []
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[0]] c
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[1]] c
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[2]] 2
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[0]] 3
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[1]] bd
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[2]] c
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[1].items())	] [(10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[0]] c
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[1]] c
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[2]] 2
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[0]] 3
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[1]] bd
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[2]] c
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[2].items())] []
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[0]] c
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[1]] c
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[2]] 2
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[0]] 3
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[1]] bd
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[2]] c
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[2].items())	] []
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[0]] c
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[1]] c
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  self.p_key[2]] 2
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[0]] 3
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[1]] bd
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  self.p_value[2]] c
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[0]})  :  list(self.p_btree[2].items())] [(2, 3)]
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_key[0]] c
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_key[1]] c
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_key[2]] 2
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_value[0]] 3
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_value[1]] bd
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_value[2]] c
[ LOG self.p_string[1] += self.p_char[1]  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_string[1] += self.p_char[1]  :  list(self.p_btree[2].items())	] [(2, 3)]
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_key[0]] c
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_key[1]] c
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_key[2]] 2
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_value[0]] 3
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_value[1]] bd
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_value[2]] c
[ POST LOG self.p_string[1] += self.p_char[1]  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_string[1] += self.p_char[1]  :  list(self.p_btree[2].items())] [(2, 3)]
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_key[0]] c
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_key[1]] c
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_key[2]] 2
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_value[0]] 3
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_value[1]] bd
[ LOG self.p_string[0] += self.p_char[2]  :  self.p_value[2]] c
[ LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[2].items())	] [(2, 3)]
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_key[0]] c
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_key[1]] c
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_key[2]] 2
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_value[0]] 3
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_value[1]] bd
[ POST LOG self.p_string[0] += self.p_char[2]  :  self.p_value[2]] c
[ POST LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_string[0] += self.p_char[2]  :  list(self.p_btree[2].items())] [(2, 3)]
[ LOG self.p_string[0] += self.p_char[0]  :  self.p_key[0]] c
[ LOG self.p_string[0] += self.p_char[0]  :  self.p_key[1]] c
[ LOG self.p_string[0] += self.p_char[0]  :  self.p_key[2]] 2
[ LOG self.p_string[0] += self.p_char[0]  :  self.p_value[0]] 3
[ LOG self.p_string[0] += self.p_char[0]  :  self.p_value[1]] bd
[ LOG self.p_string[0] += self.p_char[0]  :  self.p_value[2]] c
[ LOG self.p_string[0] += self.p_char[0]  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_string[0] += self.p_char[0]  :  list(self.p_btree[2].items())	] [(2, 3)]
[ POST LOG self.p_string[0] += self.p_char[0]  :  self.p_key[0]] c
[ POST LOG self.p_string[0] += self.p_char[0]  :  self.p_key[1]] c
[ POST LOG self.p_string[0] += self.p_char[0]  :  self.p_key[2]] 2
[ POST LOG self.p_string[0] += self.p_char[0]  :  self.p_value[0]] 3
[ POST LOG self.p_string[0] += self.p_char[0]  :  self.p_value[1]] bd
[ POST LOG self.p_string[0] += self.p_char[0]  :  self.p_value[2]] c
[ POST LOG self.p_string[0] += self.p_char[0]  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_string[0] += self.p_char[0]  :  list(self.p_btree[2].items())] [(2, 3)]
[ LOG self.p_string[1] += self.p_char[0]  :  self.p_key[0]] c
[ LOG self.p_string[1] += self.p_char[0]  :  self.p_key[1]] c
[ LOG self.p_string[1] += self.p_char[0]  :  self.p_key[2]] 2
[ LOG self.p_string[1] += self.p_char[0]  :  self.p_value[0]] 3
[ LOG self.p_string[1] += self.p_char[0]  :  self.p_value[1]] bd
[ LOG self.p_string[1] += self.p_char[0]  :  self.p_value[2]] c
[ LOG self.p_string[1] += self.p_char[0]  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_string[1] += self.p_char[0]  :  list(self.p_btree[2].items())	] [(2, 3)]
[ POST LOG self.p_string[1] += self.p_char[0]  :  self.p_key[0]] c
[ POST LOG self.p_string[1] += self.p_char[0]  :  self.p_key[1]] c
[ POST LOG self.p_string[1] += self.p_char[0]  :  self.p_key[2]] 2
[ POST LOG self.p_string[1] += self.p_char[0]  :  self.p_value[0]] 3
[ POST LOG self.p_string[1] += self.p_char[0]  :  self.p_value[1]] bd
[ POST LOG self.p_string[1] += self.p_char[0]  :  self.p_value[2]] c
[ POST LOG self.p_string[1] += self.p_char[0]  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_string[1] += self.p_char[0]  :  list(self.p_btree[2].items())] [(2, 3)]
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[0]] c
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[1]] c
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[2]] 2
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[0]] 3
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[1]] bd
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[2]] c
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[2].items())	] [(2, 3)]
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[0]] c
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[1]] c
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[2]] 2
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[0]] 3
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[1]] bd
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[2]] c
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[2].items())] [(2, 3), ('c', 3)]
[ LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  self.p_key[0]] c
[ LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  self.p_key[1]] c
[ LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  self.p_key[2]] 2
[ LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  self.p_value[0]] 3
[ LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  self.p_value[1]] bd
[ LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  self.p_value[2]] c
[ LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  list(self.p_btree[2].items())	] [(2, 3), ('c', 3)]
[ POST LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  self.p_key[0]] c
[ POST LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  self.p_key[1]] c
[ POST LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  self.p_key[2]] 2
[ POST LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  self.p_value[0]] 3
[ POST LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  self.p_value[1]] bd
[ POST LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  self.p_value[2]] c
[ POST LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[2].update({self.p_key[1]:self.p_value[0]})  :  list(self.p_btree[2].items())] [(2, 3), ('c', 3)]
[ LOG self.p_int[2] = 6  :  self.p_key[0]] c
[ LOG self.p_int[2] = 6  :  self.p_key[1]] c
[ LOG self.p_int[2] = 6  :  self.p_key[2]] 2
[ LOG self.p_int[2] = 6  :  self.p_value[0]] 3
[ LOG self.p_int[2] = 6  :  self.p_value[1]] bd
[ LOG self.p_int[2] = 6  :  self.p_value[2]] c
[ LOG self.p_int[2] = 6  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_int[2] = 6  :  list(self.p_btree[2].items())	] [(2, 3), ('c', 3)]
[ POST LOG self.p_int[2] = 6  :  self.p_key[0]] c
[ POST LOG self.p_int[2] = 6  :  self.p_key[1]] c
[ POST LOG self.p_int[2] = 6  :  self.p_key[2]] 2
[ POST LOG self.p_int[2] = 6  :  self.p_value[0]] 3
[ POST LOG self.p_int[2] = 6  :  self.p_value[1]] bd
[ POST LOG self.p_int[2] = 6  :  self.p_value[2]] c
[ POST LOG self.p_int[2] = 6  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_int[2] = 6  :  list(self.p_btree[2].items())] [(2, 3), ('c', 3)]
[ LOG self.p_key[0] = self.p_int[2]  :  self.p_key[0]] c
[ LOG self.p_key[0] = self.p_int[2]  :  self.p_key[1]] c
[ LOG self.p_key[0] = self.p_int[2]  :  self.p_key[2]] 2
[ LOG self.p_key[0] = self.p_int[2]  :  self.p_value[0]] 3
[ LOG self.p_key[0] = self.p_int[2]  :  self.p_value[1]] bd
[ LOG self.p_key[0] = self.p_int[2]  :  self.p_value[2]] c
[ LOG self.p_key[0] = self.p_int[2]  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_key[0] = self.p_int[2]  :  list(self.p_btree[2].items())	] [(2, 3), ('c', 3)]
[ POST LOG self.p_key[0] = self.p_int[2]  :  self.p_key[0]] 6
[ POST LOG self.p_key[0] = self.p_int[2]  :  self.p_key[1]] c
[ POST LOG self.p_key[0] = self.p_int[2]  :  self.p_key[2]] 2
[ POST LOG self.p_key[0] = self.p_int[2]  :  self.p_value[0]] 3
[ POST LOG self.p_key[0] = self.p_int[2]  :  self.p_value[1]] bd
[ POST LOG self.p_key[0] = self.p_int[2]  :  self.p_value[2]] c
[ POST LOG self.p_key[0] = self.p_int[2]  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_key[0] = self.p_int[2]  :  list(self.p_btree[2].items())] [(2, 3), ('c', 3)]
[ LOG self.p_int[1] = 1  :  self.p_key[0]] 6
[ LOG self.p_int[1] = 1  :  self.p_key[1]] c
[ LOG self.p_int[1] = 1  :  self.p_key[2]] 2
[ LOG self.p_int[1] = 1  :  self.p_value[0]] 3
[ LOG self.p_int[1] = 1  :  self.p_value[1]] bd
[ LOG self.p_int[1] = 1  :  self.p_value[2]] c
[ LOG self.p_int[1] = 1  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_int[1] = 1  :  list(self.p_btree[2].items())	] [(2, 3), ('c', 3)]
[ POST LOG self.p_int[1] = 1  :  self.p_key[0]] 6
[ POST LOG self.p_int[1] = 1  :  self.p_key[1]] c
[ POST LOG self.p_int[1] = 1  :  self.p_key[2]] 2
[ POST LOG self.p_int[1] = 1  :  self.p_value[0]] 3
[ POST LOG self.p_int[1] = 1  :  self.p_value[1]] bd
[ POST LOG self.p_int[1] = 1  :  self.p_value[2]] c
[ POST LOG self.p_int[1] = 1  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_int[1] = 1  :  list(self.p_btree[2].items())] [(2, 3), ('c', 3)]
[ LOG self.p_char[2] ="b"  :  self.p_key[0]] 6
[ LOG self.p_char[2] ="b"  :  self.p_key[1]] c
[ LOG self.p_char[2] ="b"  :  self.p_key[2]] 2
[ LOG self.p_char[2] ="b"  :  self.p_value[0]] 3
[ LOG self.p_char[2] ="b"  :  self.p_value[1]] bd
[ LOG self.p_char[2] ="b"  :  self.p_value[2]] c
[ LOG self.p_char[2] ="b"  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_char[2] ="b"  :  list(self.p_btree[2].items())	] [(2, 3), ('c', 3)]
[ POST LOG self.p_char[2] ="b"  :  self.p_key[0]] 6
[ POST LOG self.p_char[2] ="b"  :  self.p_key[1]] c
[ POST LOG self.p_char[2] ="b"  :  self.p_key[2]] 2
[ POST LOG self.p_char[2] ="b"  :  self.p_value[0]] 3
[ POST LOG self.p_char[2] ="b"  :  self.p_value[1]] bd
[ POST LOG self.p_char[2] ="b"  :  self.p_value[2]] c
[ POST LOG self.p_char[2] ="b"  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_char[2] ="b"  :  list(self.p_btree[2].items())] [(2, 3), ('c', 3)]
[ LOG self.p_value[1] = self.p_int[0]  :  self.p_key[0]] 6
[ LOG self.p_value[1] = self.p_int[0]  :  self.p_key[1]] c
[ LOG self.p_value[1] = self.p_int[0]  :  self.p_key[2]] 2
[ LOG self.p_value[1] = self.p_int[0]  :  self.p_value[0]] 3
[ LOG self.p_value[1] = self.p_int[0]  :  self.p_value[1]] bd
[ LOG self.p_value[1] = self.p_int[0]  :  self.p_value[2]] c
[ LOG self.p_value[1] = self.p_int[0]  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_value[1] = self.p_int[0]  :  list(self.p_btree[2].items())	] [(2, 3), ('c', 3)]
[ POST LOG self.p_value[1] = self.p_int[0]  :  self.p_key[0]] 6
[ POST LOG self.p_value[1] = self.p_int[0]  :  self.p_key[1]] c
[ POST LOG self.p_value[1] = self.p_int[0]  :  self.p_key[2]] 2
[ POST LOG self.p_value[1] = self.p_int[0]  :  self.p_value[0]] 3
[ POST LOG self.p_value[1] = self.p_int[0]  :  self.p_value[1]] 2
[ POST LOG self.p_value[1] = self.p_int[0]  :  self.p_value[2]] c
[ POST LOG self.p_value[1] = self.p_int[0]  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_value[1] = self.p_int[0]  :  list(self.p_btree[2].items())] [(2, 3), ('c', 3)]
[ LOG self.p_char[1] ="b"  :  self.p_key[0]] 6
[ LOG self.p_char[1] ="b"  :  self.p_key[1]] c
[ LOG self.p_char[1] ="b"  :  self.p_key[2]] 2
[ LOG self.p_char[1] ="b"  :  self.p_value[0]] 3
[ LOG self.p_char[1] ="b"  :  self.p_value[1]] 2
[ LOG self.p_char[1] ="b"  :  self.p_value[2]] c
[ LOG self.p_char[1] ="b"  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_char[1] ="b"  :  list(self.p_btree[2].items())	] [(2, 3), ('c', 3)]
[ POST LOG self.p_char[1] ="b"  :  self.p_key[0]] 6
[ POST LOG self.p_char[1] ="b"  :  self.p_key[1]] c
[ POST LOG self.p_char[1] ="b"  :  self.p_key[2]] 2
[ POST LOG self.p_char[1] ="b"  :  self.p_value[0]] 3
[ POST LOG self.p_char[1] ="b"  :  self.p_value[1]] 2
[ POST LOG self.p_char[1] ="b"  :  self.p_value[2]] c
[ POST LOG self.p_char[1] ="b"  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_char[1] ="b"  :  list(self.p_btree[2].items())] [(2, 3), ('c', 3)]
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_key[0]] 6
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_key[1]] c
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_key[2]] 2
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_value[0]] 3
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_value[1]] 2
[ LOG self.p_string[1] = self.p_char[2]  :  self.p_value[2]] c
[ LOG self.p_string[1] = self.p_char[2]  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_string[1] = self.p_char[2]  :  list(self.p_btree[2].items())	] [(2, 3), ('c', 3)]
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_key[0]] 6
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_key[1]] c
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_key[2]] 2
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_value[0]] 3
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_value[1]] 2
[ POST LOG self.p_string[1] = self.p_char[2]  :  self.p_value[2]] c
[ POST LOG self.p_string[1] = self.p_char[2]  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_string[1] = self.p_char[2]  :  list(self.p_btree[2].items())] [(2, 3), ('c', 3)]
[ LOG self.p_key[2] = self.p_int[2]  :  self.p_key[0]] 6
[ LOG self.p_key[2] = self.p_int[2]  :  self.p_key[1]] c
[ LOG self.p_key[2] = self.p_int[2]  :  self.p_key[2]] 2
[ LOG self.p_key[2] = self.p_int[2]  :  self.p_value[0]] 3
[ LOG self.p_key[2] = self.p_int[2]  :  self.p_value[1]] 2
[ LOG self.p_key[2] = self.p_int[2]  :  self.p_value[2]] c
[ LOG self.p_key[2] = self.p_int[2]  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_key[2] = self.p_int[2]  :  list(self.p_btree[2].items())	] [(2, 3), ('c', 3)]
[ POST LOG self.p_key[2] = self.p_int[2]  :  self.p_key[0]] 6
[ POST LOG self.p_key[2] = self.p_int[2]  :  self.p_key[1]] c
[ POST LOG self.p_key[2] = self.p_int[2]  :  self.p_key[2]] 6
[ POST LOG self.p_key[2] = self.p_int[2]  :  self.p_value[0]] 3
[ POST LOG self.p_key[2] = self.p_int[2]  :  self.p_value[1]] 2
[ POST LOG self.p_key[2] = self.p_int[2]  :  self.p_value[2]] c
[ POST LOG self.p_key[2] = self.p_int[2]  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_key[2] = self.p_int[2]  :  list(self.p_btree[2].items())] [(2, 3), ('c', 3)]
[ LOG self.p_int[2] = 1  :  self.p_key[0]] 6
[ LOG self.p_int[2] = 1  :  self.p_key[1]] c
[ LOG self.p_int[2] = 1  :  self.p_key[2]] 6
[ LOG self.p_int[2] = 1  :  self.p_value[0]] 3
[ LOG self.p_int[2] = 1  :  self.p_value[1]] 2
[ LOG self.p_int[2] = 1  :  self.p_value[2]] c
[ LOG self.p_int[2] = 1  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_int[2] = 1  :  list(self.p_btree[2].items())	] [(2, 3), ('c', 3)]
[ POST LOG self.p_int[2] = 1  :  self.p_key[0]] 6
[ POST LOG self.p_int[2] = 1  :  self.p_key[1]] c
[ POST LOG self.p_int[2] = 1  :  self.p_key[2]] 6
[ POST LOG self.p_int[2] = 1  :  self.p_value[0]] 3
[ POST LOG self.p_int[2] = 1  :  self.p_value[1]] 2
[ POST LOG self.p_int[2] = 1  :  self.p_value[2]] c
[ POST LOG self.p_int[2] = 1  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_int[2] = 1  :  list(self.p_btree[2].items())] [(2, 3), ('c', 3)]
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_key[0]] 6
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_key[1]] c
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_key[2]] 6
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_value[0]] 3
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_value[1]] 2
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_value[2]] c
[ LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[2].items())	] [(2, 3), ('c', 3)]
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_key[0]] 6
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_key[1]] c
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_key[2]] 6
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_value[0]] 1
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_value[1]] 2
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_value[2]] c
[ POST LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[2].items())] [(2, 3), ('c', 3)]
[ LOG self.p_string[2] = self.p_char[0]  :  self.p_key[0]] 6
[ LOG self.p_string[2] = self.p_char[0]  :  self.p_key[1]] c
[ LOG self.p_string[2] = self.p_char[0]  :  self.p_key[2]] 6
[ LOG self.p_string[2] = self.p_char[0]  :  self.p_value[0]] 1
[ LOG self.p_string[2] = self.p_char[0]  :  self.p_value[1]] 2
[ LOG self.p_string[2] = self.p_char[0]  :  self.p_value[2]] c
[ LOG self.p_string[2] = self.p_char[0]  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_string[2] = self.p_char[0]  :  list(self.p_btree[2].items())	] [(2, 3), ('c', 3)]
[ POST LOG self.p_string[2] = self.p_char[0]  :  self.p_key[0]] 6
[ POST LOG self.p_string[2] = self.p_char[0]  :  self.p_key[1]] c
[ POST LOG self.p_string[2] = self.p_char[0]  :  self.p_key[2]] 6
[ POST LOG self.p_string[2] = self.p_char[0]  :  self.p_value[0]] 1
[ POST LOG self.p_string[2] = self.p_char[0]  :  self.p_value[1]] 2
[ POST LOG self.p_string[2] = self.p_char[0]  :  self.p_value[2]] c
[ POST LOG self.p_string[2] = self.p_char[0]  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_string[2] = self.p_char[0]  :  list(self.p_btree[2].items())] [(2, 3), ('c', 3)]
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[0]] 6
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[1]] c
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[2]] 6
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[0]] 1
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[1]] 2
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[2]] c
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[2].items())	] [(2, 3), ('c', 3)]
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[0]] 6
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[1]] c
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[2]] 6
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[0]] 1
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[1]] 2
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[2]] c
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[2].items())] [(2, 3), (6, 1), ('c', 3)]
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_key[0]] 6
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_key[1]] c
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_key[2]] 6
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_value[0]] 1
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_value[1]] 2
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_value[2]] c
[ LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[2].items())	] [(2, 3), (6, 1), ('c', 3)]
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_key[0]] 6
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_key[1]] c
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_key[2]] 6
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_value[0]] 1
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_value[1]] 2
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_value[2]] c
[ POST LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[2].items())] [(2, 3), (6, 1), ('c', 3)]
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  self.p_key[0]] 6
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  self.p_key[1]] c
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  self.p_key[2]] 6
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  self.p_value[0]] 1
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  self.p_value[1]] 2
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  self.p_value[2]] c
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  list(self.p_btree[2].items())	] [(2, 3), (6, 1), ('c', 3)]
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  self.p_key[0]] 6
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  self.p_key[1]] c
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  self.p_key[2]] 6
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  self.p_value[0]] 1
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  self.p_value[1]] 2
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  self.p_value[2]] c
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  list(self.p_btree[1].items())] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[1])  :  list(self.p_btree[2].items())] [(2, 3), (6, 1), ('c', 3)]
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[0]] 6
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[1]] c
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[2]] 6
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[0]] 1
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[1]] 2
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[2]] c
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[1].items())	] [(2, 3), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[2].items())	] [(2, 3), (6, 1), ('c', 3)]
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[0]] 6
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[1]] c
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[2]] 6
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[0]] 1
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[1]] 2
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[2]] c
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[1].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[2].items())] [(2, 3), (6, 1), ('c', 3)]
[ LOG self.p_int[1] = 5  :  self.p_key[0]] 6
[ LOG self.p_int[1] = 5  :  self.p_key[1]] c
[ LOG self.p_int[1] = 5  :  self.p_key[2]] 6
[ LOG self.p_int[1] = 5  :  self.p_value[0]] 1
[ LOG self.p_int[1] = 5  :  self.p_value[1]] 2
[ LOG self.p_int[1] = 5  :  self.p_value[2]] c
[ LOG self.p_int[1] = 5  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_int[1] = 5  :  list(self.p_btree[2].items())	] [(2, 3), (6, 1), ('c', 3)]
[ POST LOG self.p_int[1] = 5  :  self.p_key[0]] 6
[ POST LOG self.p_int[1] = 5  :  self.p_key[1]] c
[ POST LOG self.p_int[1] = 5  :  self.p_key[2]] 6
[ POST LOG self.p_int[1] = 5  :  self.p_value[0]] 1
[ POST LOG self.p_int[1] = 5  :  self.p_value[1]] 2
[ POST LOG self.p_int[1] = 5  :  self.p_value[2]] c
[ POST LOG self.p_int[1] = 5  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_int[1] = 5  :  list(self.p_btree[2].items())] [(2, 3), (6, 1), ('c', 3)]
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_key[0]] 6
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_key[1]] c
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_key[2]] 6
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_value[0]] 1
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_value[1]] 2
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_value[2]] c
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  list(self.p_btree[2].items())	] [(2, 3), (6, 1), ('c', 3)]
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_key[0]] 6
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_key[1]] c
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_key[2]] 6
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_value[0]] 1
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_value[1]] 2
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  self.p_value[2]] c
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[1].insert(self.p_key[1],self.p_value[0])  :  list(self.p_btree[2].items())] [(2, 3), (6, 1), ('c', 3)]
[ LOG self.p_int[0] = 1  :  self.p_key[0]] 6
[ LOG self.p_int[0] = 1  :  self.p_key[1]] c
[ LOG self.p_int[0] = 1  :  self.p_key[2]] 6
[ LOG self.p_int[0] = 1  :  self.p_value[0]] 1
[ LOG self.p_int[0] = 1  :  self.p_value[1]] 2
[ LOG self.p_int[0] = 1  :  self.p_value[2]] c
[ LOG self.p_int[0] = 1  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_int[0] = 1  :  list(self.p_btree[2].items())	] [(2, 3), (6, 1), ('c', 3)]
[ POST LOG self.p_int[0] = 1  :  self.p_key[0]] 6
[ POST LOG self.p_int[0] = 1  :  self.p_key[1]] c
[ POST LOG self.p_int[0] = 1  :  self.p_key[2]] 6
[ POST LOG self.p_int[0] = 1  :  self.p_value[0]] 1
[ POST LOG self.p_int[0] = 1  :  self.p_value[1]] 2
[ POST LOG self.p_int[0] = 1  :  self.p_value[2]] c
[ POST LOG self.p_int[0] = 1  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_int[0] = 1  :  list(self.p_btree[2].items())] [(2, 3), (6, 1), ('c', 3)]
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_key[0]] 6
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_key[1]] c
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_key[2]] 6
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_value[0]] 1
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_value[1]] 2
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_value[2]] c
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  list(self.p_btree[2].items())	] [(2, 3), (6, 1), ('c', 3)]
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_key[0]] 6
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_key[1]] c
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_key[2]] 6
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_value[0]] 1
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_value[1]] 2
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_value[2]] c
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  list(self.p_btree[2].items())] [(2, 3), (6, 1), ('c', 3)]
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[0]] 6
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[1]] c
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[2]] 6
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[0]] 1
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[1]] 2
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[2]] c
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[2].items())	] [(2, 3), (6, 1), ('c', 3)]
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[0]] 6
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[1]] c
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[2]] 6
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[0]] 1
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[1]] 2
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[2]] c
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[2].items())] [(2, 3), (6, 1), ('c', 3)]
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_key[0]] 6
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_key[1]] c
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_key[2]] 6
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_value[0]] 1
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_value[1]] 2
[ LOG self.p_key[1] = self.p_int[0]  :  self.p_value[2]] c
[ LOG self.p_key[1] = self.p_int[0]  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_key[1] = self.p_int[0]  :  list(self.p_btree[2].items())	] [(2, 3), (6, 1), ('c', 3)]
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_key[0]] 6
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_key[1]] 1
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_key[2]] 6
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_value[0]] 1
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_value[1]] 2
[ POST LOG self.p_key[1] = self.p_int[0]  :  self.p_value[2]] c
[ POST LOG self.p_key[1] = self.p_int[0]  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_key[1] = self.p_int[0]  :  list(self.p_btree[2].items())] [(2, 3), (6, 1), ('c', 3)]
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_key[0]] 6
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_key[1]] 1
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_key[2]] 6
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_value[0]] 1
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_value[1]] 2
[ LOG self.p_string[1] += self.p_char[1]  :  self.p_value[2]] c
[ LOG self.p_string[1] += self.p_char[1]  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_string[1] += self.p_char[1]  :  list(self.p_btree[2].items())	] [(2, 3), (6, 1), ('c', 3)]
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_key[0]] 6
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_key[1]] 1
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_key[2]] 6
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_value[0]] 1
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_value[1]] 2
[ POST LOG self.p_string[1] += self.p_char[1]  :  self.p_value[2]] c
[ POST LOG self.p_string[1] += self.p_char[1]  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_string[1] += self.p_char[1]  :  list(self.p_btree[2].items())] [(2, 3), (6, 1), ('c', 3)]
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_key[0]] 6
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_key[1]] 1
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_key[2]] 6
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_value[0]] 1
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_value[1]] 2
[ LOG self.p_value[0] = self.p_int[1]  :  self.p_value[2]] c
[ LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[2].items())	] [(2, 3), (6, 1), ('c', 3)]
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_key[0]] 6
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_key[1]] 1
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_key[2]] 6
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_value[0]] 5
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_value[1]] 2
[ POST LOG self.p_value[0] = self.p_int[1]  :  self.p_value[2]] c
[ POST LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_value[0] = self.p_int[1]  :  list(self.p_btree[2].items())] [(2, 3), (6, 1), ('c', 3)]
[ LOG self.p_int[0] = 8  :  self.p_key[0]] 6
[ LOG self.p_int[0] = 8  :  self.p_key[1]] 1
[ LOG self.p_int[0] = 8  :  self.p_key[2]] 6
[ LOG self.p_int[0] = 8  :  self.p_value[0]] 5
[ LOG self.p_int[0] = 8  :  self.p_value[1]] 2
[ LOG self.p_int[0] = 8  :  self.p_value[2]] c
[ LOG self.p_int[0] = 8  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_int[0] = 8  :  list(self.p_btree[2].items())	] [(2, 3), (6, 1), ('c', 3)]
[ POST LOG self.p_int[0] = 8  :  self.p_key[0]] 6
[ POST LOG self.p_int[0] = 8  :  self.p_key[1]] 1
[ POST LOG self.p_int[0] = 8  :  self.p_key[2]] 6
[ POST LOG self.p_int[0] = 8  :  self.p_value[0]] 5
[ POST LOG self.p_int[0] = 8  :  self.p_value[1]] 2
[ POST LOG self.p_int[0] = 8  :  self.p_value[2]] c
[ POST LOG self.p_int[0] = 8  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_int[0] = 8  :  list(self.p_btree[2].items())] [(2, 3), (6, 1), ('c', 3)]
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[0]] 6
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[1]] 1
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[2]] 6
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[0]] 5
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[1]] 2
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[2]] c
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[2].items())	] [(2, 3), (6, 1), ('c', 3)]
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[0]] 6
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[1]] 1
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_key[2]] 6
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[0]] 5
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[1]] 2
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  self.p_value[2]] c
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[2].update({self.p_key[2]:self.p_value[1]})  :  list(self.p_btree[2].items())] [(2, 3), (6, 2), ('c', 3)]
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[0]] 6
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[1]] 1
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[2]] 6
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[0]] 5
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[1]] 2
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[2]] c
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[2].items())	] [(2, 3), (6, 2), ('c', 3)]
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[0]] 6
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[1]] 1
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_key[2]] 6
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[0]] 5
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[1]] 2
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  self.p_value[2]] c
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[1].insert(self.p_key[0],self.p_value[2])  :  list(self.p_btree[2].items())] [(2, 3), (6, 2), ('c', 3)]
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_key[0]] 6
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_key[1]] 1
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_key[2]] 6
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_value[0]] 5
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_value[1]] 2
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_value[2]] c
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  list(self.p_btree[2].items())	] [(2, 3), (6, 2), ('c', 3)]
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_key[0]] 6
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_key[1]] 1
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_key[2]] 6
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_value[0]] 5
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_value[1]] 2
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  self.p_value[2]] c
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[2].insert(self.p_key[0],self.p_value[1])  :  list(self.p_btree[2].items())] [(2, 3), (6, 2), ('c', 3)]
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_key[0]] 6
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_key[1]] 1
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_key[2]] 6
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_value[0]] 5
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_value[1]] 2
[ LOG self.p_string[2] += self.p_char[2]  :  self.p_value[2]] c
[ LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[2].items())	] [(2, 3), (6, 2), ('c', 3)]
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_key[0]] 6
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_key[1]] 1
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_key[2]] 6
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_value[0]] 5
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_value[1]] 2
[ POST LOG self.p_string[2] += self.p_char[2]  :  self.p_value[2]] c
[ POST LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_string[2] += self.p_char[2]  :  list(self.p_btree[2].items())] [(2, 3), (6, 2), ('c', 3)]
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[0]] 6
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[1]] 1
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[2]] 6
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[0]] 5
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[1]] 2
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[2]] c
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[2].items())	] [(2, 3), (6, 2), ('c', 3)]
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[0]] 6
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[1]] 1
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_key[2]] 6
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[0]] 5
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[1]] 2
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  self.p_value[2]] c
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[2].insert(self.p_key[2],self.p_value[2])  :  list(self.p_btree[2].items())] [(2, 3), (6, 2), ('c', 3)]
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[0]] 6
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[1]] 1
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[2]] 6
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[0]] 5
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[1]] 2
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[2]] c
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[2].items())	] [(2, 3), (6, 2), ('c', 3)]
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[0]] 6
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[1]] 1
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_key[2]] 6
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[0]] 5
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[1]] 2
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  self.p_value[2]] c
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_btree[2].update({self.p_key[0]:self.p_value[0]})  :  list(self.p_btree[2].items())] [(2, 3), (6, 5), ('c', 3)]
[ LOG self.p_value[2] = self.p_string[1]  :  self.p_key[0]] 6
[ LOG self.p_value[2] = self.p_string[1]  :  self.p_key[1]] 1
[ LOG self.p_value[2] = self.p_string[1]  :  self.p_key[2]] 6
[ LOG self.p_value[2] = self.p_string[1]  :  self.p_value[0]] 5
[ LOG self.p_value[2] = self.p_string[1]  :  self.p_value[1]] 2
[ LOG self.p_value[2] = self.p_string[1]  :  self.p_value[2]] c
[ LOG self.p_value[2] = self.p_string[1]  :  list(self.p_btree[1].items())	] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ LOG self.p_value[2] = self.p_string[1]  :  list(self.p_btree[2].items())	] [(2, 3), (6, 5), ('c', 3)]
[ POST LOG self.p_value[2] = self.p_string[1]  :  self.p_key[0]] 6
[ POST LOG self.p_value[2] = self.p_string[1]  :  self.p_key[1]] 1
[ POST LOG self.p_value[2] = self.p_string[1]  :  self.p_key[2]] 6
[ POST LOG self.p_value[2] = self.p_string[1]  :  self.p_value[0]] 5
[ POST LOG self.p_value[2] = self.p_string[1]  :  self.p_value[1]] 2
[ POST LOG self.p_value[2] = self.p_string[1]  :  self.p_value[2]] bb
[ POST LOG self.p_value[2] = self.p_string[1]  :  list(self.p_btree[1].items())] [(2, 3), (6, 2), (10, 'bd'), ('a', 'c'), ('b', 3), ('c', 'c')]
[ POST LOG self.p_value[2] = self.p_string[1]  :  list(self.p_btree[2].items())] [(2, 3), (6, 5), ('c', 3)]
0.0189988613129 TOTAL RUNTIME
2 EXECUTED
200 TOTAL TEST OPERATIONS
0.0150353908539 TIME SPENT EXECUTING TEST OPERATIONS
0.00268054008484 TIME SPENT EVALUATING GUARDS AND CHOOSING ACTIONS
0.000134944915771 TIME SPENT CHECKING PROPERTIES
0.0151703357697 TOTAL TIME SPENT RUNNING SUT
4.81605529785e-05 TIME SPENT RESTARTING
0.0 TIME SPENT REDUCING TEST CASES
