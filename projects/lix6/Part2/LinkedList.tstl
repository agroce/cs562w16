@import LinkedList
@import math
@import time

<@
def length(self):
        ptr = self.head
        count = 0
        while ptr:
            count = count + 1
            ptr = ptr.next
        return count

def empty(self):
	if (length(self) == 0):
		return True
	else :
		return False
def checkInsert(self, D):
    ptr = self.head
    if (ptr == None):
        return False
    if(D == ptr.data):
        return True
    else:
        return False


def checkAppend(self, D):
        ptr = self.head
        if(ptr == None):
            return False
        else:
            while ptr.next:
                ptr=ptr.next
            if (ptr.data == D):
            	return True
            else:
            	return False
@>

source: LinkedList.py

pool: %INT% 1
pool: %LINKEDLIST% 1
pool: %CHAR% 4

%INT%:=%[1..20]%
%LINKEDLIST%:=LinkedList.LinkedList()
~%LINKEDLIST%.insert(%INT%) => (length(%LINKEDLIST,1%) == PRE%(length(%LINKEDLIST,1%))%+1) and (checkInsert(%LINKEDLIST,1%,%INT%) == True )

~%LINKEDLIST%.append(%INT%) => (length(%LINKEDLIST,1%) == PRE%(length(%LINKEDLIST,1%))%+1) and (checkAppend(%LINKEDLIST,1%,%INT%) == True )


